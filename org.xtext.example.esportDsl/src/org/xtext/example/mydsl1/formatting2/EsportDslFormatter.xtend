/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl1.formatting2

import com.google.inject.Inject
import eSport.Country
import eSport.League
import eSport.Person
import eSport.Qualification
import eSport.Root
import eSport.Team
import eSport.Tournament
import eSport.Zone
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl1.services.EsportDslGrammarAccess

class EsportDslFormatter extends AbstractFormatter2 {
	
	@Inject extension EsportDslGrammarAccess

	def dispatch void format(Root root, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Zone zone : root.getZones()) {
			zone.format;
		}
		for (Tournament tournament : root.getTournaments()) {
			tournament.format;
		}
		for (League league : root.getLeagues()) {
			league.format;
		}
		for (Team team : root.getTeams()) {
			team.format;
		}
		for (Person person : root.getPersons()) {
			person.format;
		}
		for (Qualification qualification : root.getQualifications()) {
			qualification.format;
		}
	}

	def dispatch void format(Zone zone, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Country country : zone.getCountries()) {
			country.format;
		}
		for (Team team : zone.getTeams()) {
			team.format;
		}
	}
	
	// TODO: implement for Tournament, League, Team, Person, FinalStage, GroupStage, Group, Player, Coach
}
