/*
 * generated by Xtext 2.12.0
 */
grammar InternalEsportDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.EsportDslGrammarAccess;

}

@parser::members {

 	private EsportDslGrammarAccess grammarAccess;

    public InternalEsportDslParser(TokenStream input, EsportDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Root";
   	}

   	@Override
   	protected EsportDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	iv_ruleRoot=ruleRoot
	{ $current=$iv_ruleRoot.current; }
	EOF;

// Rule Root
ruleRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getZonesZoneParserRuleCall_0_0());
				}
				lv_zones_0_0=ruleZone
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"zones",
						lv_zones_0_0,
						"org.xtext.example.mydsl1.EsportDsl.Zone");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getTournamentsTournamentParserRuleCall_1_0());
				}
				lv_tournaments_1_0=ruleTournament
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"tournaments",
						lv_tournaments_1_0,
						"org.xtext.example.mydsl1.EsportDsl.Tournament");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getLeaguesLeagueParserRuleCall_2_0());
				}
				lv_leagues_2_0=ruleLeague
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"leagues",
						lv_leagues_2_0,
						"org.xtext.example.mydsl1.EsportDsl.League");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getTeamsTeamParserRuleCall_3_0());
				}
				lv_teams_3_0=ruleTeam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"teams",
						lv_teams_3_0,
						"org.xtext.example.mydsl1.EsportDsl.Team");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getPersonsPersonParserRuleCall_4_0());
				}
				lv_persons_4_0=rulePerson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"persons",
						lv_persons_4_0,
						"org.xtext.example.mydsl1.EsportDsl.Person");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getQualificationsQualificationParserRuleCall_5_0());
				}
				lv_qualifications_5_0=ruleQualification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"qualifications",
						lv_qualifications_5_0,
						"org.xtext.example.mydsl1.EsportDsl.Qualification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getCountriesCountryParserRuleCall_6_0());
				}
				lv_countries_6_0=ruleCountry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"countries",
						lv_countries_6_0,
						"org.xtext.example.mydsl1.EsportDsl.Country");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPersonAccess().getPlayerParserRuleCall_0());
		}
		this_Player_0=rulePlayer
		{
			$current = $this_Player_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPersonAccess().getCoachParserRuleCall_1());
		}
		this_Coach_1=ruleCoach
		{
			$current = $this_Coach_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleZone
entryRuleZone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZoneRule()); }
	iv_ruleZone=ruleZone
	{ $current=$iv_ruleZone.current; }
	EOF;

// Rule Zone
ruleZone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getZoneAccess().getZoneAction_0(),
					$current);
			}
		)
		otherlv_1='Zone'
		{
			newLeafNode(otherlv_1, grammarAccess.getZoneAccess().getZoneKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZoneAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZoneRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getZoneAccess().getColonKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getZoneAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getZoneAccess().getCountriesCountryParserRuleCall_5_0());
				}
				lv_countries_5_0=ruleCountry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getZoneRule());
					}
					add(
						$current,
						"countries",
						lv_countries_5_0,
						"org.xtext.example.mydsl1.EsportDsl.Country");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getZoneAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getZoneAccess().getCountriesCountryParserRuleCall_6_1_0());
					}
					lv_countries_7_0=ruleCountry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getZoneRule());
						}
						add(
							$current,
							"countries",
							lv_countries_7_0,
							"org.xtext.example.mydsl1.EsportDsl.Country");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getZoneAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getZoneAccess().getLeftParenthesisKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getZoneAccess().getTeamsTeamParserRuleCall_8_1_0());
					}
					lv_teams_10_0=ruleTeam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getZoneRule());
						}
						add(
							$current,
							"teams",
							lv_teams_10_0,
							"org.xtext.example.mydsl1.EsportDsl.Team");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getZoneAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getZoneAccess().getTeamsTeamParserRuleCall_8_2_1_0());
						}
						lv_teams_12_0=ruleTeam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getZoneRule());
							}
							add(
								$current,
								"teams",
								lv_teams_12_0,
								"org.xtext.example.mydsl1.EsportDsl.Team");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getZoneAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleTournament
entryRuleTournament returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTournamentRule()); }
	iv_ruleTournament=ruleTournament
	{ $current=$iv_ruleTournament.current; }
	EOF;

// Rule Tournament
ruleTournament returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTournamentAccess().getTournamentAction_0(),
					$current);
			}
		)
		otherlv_1='Tournament'
		{
			newLeafNode(otherlv_1, grammarAccess.getTournamentAccess().getTournamentKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTournamentAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTournamentRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getTournamentAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTournamentAccess().getSizeEIntParserRuleCall_4_0());
				}
				lv_size_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTournamentRule());
					}
					set(
						$current,
						"size",
						lv_size_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTournamentAccess().getTypeTournamentTypeEnumRuleCall_5_0());
				}
				lv_type_5_0=ruleTournamentType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTournamentRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.mydsl1.EsportDsl.TournamentType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTournamentAccess().getYearEIntParserRuleCall_6_0());
				}
				lv_year_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTournamentRule());
					}
					set(
						$current,
						"year",
						lv_year_6_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getTournamentAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTournamentRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTournamentAccess().getAllowedZonesZoneCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getTournamentAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTournamentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getAllowedZonesZoneCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getTournamentAccess().getRightParenthesisKeyword_10());
		}
		(
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getTournamentAccess().getLeftParenthesisKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTournamentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getCountriesCountryCrossReference_11_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getTournamentAccess().getCommaKeyword_11_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTournamentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTournamentAccess().getCountriesCountryCrossReference_11_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getTournamentAccess().getRightParenthesisKeyword_11_3());
			}
		)?
		(
			otherlv_17='qualifiesFor'
			{
				newLeafNode(otherlv_17, grammarAccess.getTournamentAccess().getQualifiesForKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTournamentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getQualifiesForQualificationCrossReference_12_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_19='qualifiesFrom'
			{
				newLeafNode(otherlv_19, grammarAccess.getTournamentAccess().getQualifiesFromKeyword_13_0());
			}
			otherlv_20='('
			{
				newLeafNode(otherlv_20, grammarAccess.getTournamentAccess().getLeftParenthesisKeyword_13_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTournamentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getQualifiesFromQualificationCrossReference_13_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getTournamentAccess().getCommaKeyword_13_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTournamentRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getTournamentAccess().getQualifiesFromQualificationCrossReference_13_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24=')'
			{
				newLeafNode(otherlv_24, grammarAccess.getTournamentAccess().getRightParenthesisKeyword_13_4());
			}
		)?
		(
			otherlv_25='('
			{
				newLeafNode(otherlv_25, grammarAccess.getTournamentAccess().getLeftParenthesisKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getFinalstagesFinalStageParserRuleCall_14_1_0());
					}
					lv_finalstages_26_0=ruleFinalStage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTournamentRule());
						}
						add(
							$current,
							"finalstages",
							lv_finalstages_26_0,
							"org.xtext.example.mydsl1.EsportDsl.FinalStage");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_27=','
				{
					newLeafNode(otherlv_27, grammarAccess.getTournamentAccess().getCommaKeyword_14_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTournamentAccess().getFinalstagesFinalStageParserRuleCall_14_2_1_0());
						}
						lv_finalstages_28_0=ruleFinalStage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTournamentRule());
							}
							add(
								$current,
								"finalstages",
								lv_finalstages_28_0,
								"org.xtext.example.mydsl1.EsportDsl.FinalStage");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_29=')'
			{
				newLeafNode(otherlv_29, grammarAccess.getTournamentAccess().getRightParenthesisKeyword_14_3());
			}
		)?
		(
			otherlv_30='('
			{
				newLeafNode(otherlv_30, grammarAccess.getTournamentAccess().getLeftParenthesisKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTournamentAccess().getGroupstagesGroupStageParserRuleCall_15_1_0());
					}
					lv_groupstages_31_0=ruleGroupStage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTournamentRule());
						}
						add(
							$current,
							"groupstages",
							lv_groupstages_31_0,
							"org.xtext.example.mydsl1.EsportDsl.GroupStage");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_32=','
				{
					newLeafNode(otherlv_32, grammarAccess.getTournamentAccess().getCommaKeyword_15_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTournamentAccess().getGroupstagesGroupStageParserRuleCall_15_2_1_0());
						}
						lv_groupstages_33_0=ruleGroupStage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTournamentRule());
							}
							add(
								$current,
								"groupstages",
								lv_groupstages_33_0,
								"org.xtext.example.mydsl1.EsportDsl.GroupStage");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_34=')'
			{
				newLeafNode(otherlv_34, grammarAccess.getTournamentAccess().getRightParenthesisKeyword_15_3());
			}
		)?
	)
;

// Entry rule entryRuleLeague
entryRuleLeague returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeagueRule()); }
	iv_ruleLeague=ruleLeague
	{ $current=$iv_ruleLeague.current; }
	EOF;

// Rule League
ruleLeague returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLeagueAccess().getLeagueAction_0(),
					$current);
			}
		)
		otherlv_1='League'
		{
			newLeafNode(otherlv_1, grammarAccess.getLeagueAccess().getLeagueKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeagueRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLeagueAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getSizeEIntParserRuleCall_4_0());
				}
				lv_size_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeagueRule());
					}
					set(
						$current,
						"size",
						lv_size_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getYearEIntParserRuleCall_5_0());
				}
				lv_year_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeagueRule());
					}
					set(
						$current,
						"year",
						lv_year_5_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getSeasonSeasonEnumRuleCall_6_0());
				}
				lv_season_6_0=ruleSeason
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeagueRule());
					}
					set(
						$current,
						"season",
						lv_season_6_0,
						"org.xtext.example.mydsl1.EsportDsl.Season");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeagueRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getZoneZoneCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getLeagueAccess().getLeftParenthesisKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLeagueRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLeagueAccess().getQualifiesForQualificationCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getLeagueAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLeagueRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getLeagueAccess().getQualifiesForQualificationCrossReference_8_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getLeagueAccess().getRightParenthesisKeyword_8_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLeagueAccess().getGroupstageGroupStageParserRuleCall_9_0());
				}
				lv_groupstage_13_0=ruleGroupStage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeagueRule());
					}
					set(
						$current,
						"groupstage",
						lv_groupstage_13_0,
						"org.xtext.example.mydsl1.EsportDsl.GroupStage");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTeam
entryRuleTeam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeamRule()); }
	iv_ruleTeam=ruleTeam
	{ $current=$iv_ruleTeam.current; }
	EOF;

// Rule Team
ruleTeam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTeamAccess().getTeamAction_0(),
					$current);
			}
		)
		otherlv_1='Team'
		{
			newLeafNode(otherlv_1, grammarAccess.getTeamAccess().getTeamKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTeamAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeamRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getTeamAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTeamAccess().getChampionshipPointsEIntParserRuleCall_4_0());
				}
				lv_championshipPoints_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeamRule());
					}
					set(
						$current,
						"championshipPoints",
						lv_championshipPoints_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTeamAccess().getCoachCoachParserRuleCall_5_0());
				}
				lv_coach_5_0=ruleCoach
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeamRule());
					}
					set(
						$current,
						"coach",
						lv_coach_5_0,
						"org.xtext.example.mydsl1.EsportDsl.Coach");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getTeamAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTeamAccess().getPlayersPlayerParserRuleCall_7_0());
				}
				lv_players_7_0=rulePlayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeamRule());
					}
					add(
						$current,
						"players",
						lv_players_7_0,
						"org.xtext.example.mydsl1.EsportDsl.Player");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getTeamAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTeamAccess().getPlayersPlayerParserRuleCall_8_1_0());
					}
					lv_players_9_0=rulePlayer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTeamRule());
						}
						add(
							$current,
							"players",
							lv_players_9_0,
							"org.xtext.example.mydsl1.EsportDsl.Player");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getTeamAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleQualification
entryRuleQualification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualificationRule()); }
	iv_ruleQualification=ruleQualification
	{ $current=$iv_ruleQualification.current; }
	EOF;

// Rule Qualification
ruleQualification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQualificationAccess().getQualificationAction_0(),
					$current);
			}
		)
		otherlv_1='Qualification'
		{
			newLeafNode(otherlv_1, grammarAccess.getQualificationAccess().getQualificationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualificationAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualificationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCountry
entryRuleCountry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountryRule()); }
	iv_ruleCountry=ruleCountry
	{ $current=$iv_ruleCountry.current; }
	EOF;

// Rule Country
ruleCountry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCountryAccess().getCountryAction_0(),
					$current);
			}
		)
		otherlv_1='Country'
		{
			newLeafNode(otherlv_1, grammarAccess.getCountryAccess().getCountryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleFinalStage
entryRuleFinalStage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinalStageRule()); }
	iv_ruleFinalStage=ruleFinalStage
	{ $current=$iv_ruleFinalStage.current; }
	EOF;

// Rule FinalStage
ruleFinalStage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFinalStageAccess().getFinalStageAction_0(),
					$current);
			}
		)
		otherlv_1='FinalStage'
		{
			newLeafNode(otherlv_1, grammarAccess.getFinalStageAccess().getFinalStageKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFinalStageAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFinalStageAccess().getMaxNbGamesEIntParserRuleCall_3_0());
				}
				lv_maxNbGames_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinalStageRule());
					}
					set(
						$current,
						"maxNbGames",
						lv_maxNbGames_3_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getFinalStageAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFinalStageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFinalStageAccess().getTeamsTeamCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getFinalStageAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFinalStageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFinalStageAccess().getTeamsTeamCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getFinalStageAccess().getRightParenthesisKeyword_7());
		}
		(
			otherlv_9='matchs'
			{
				newLeafNode(otherlv_9, grammarAccess.getFinalStageAccess().getMatchsKeyword_8_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getFinalStageAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFinalStageAccess().getMatchsMatchParserRuleCall_8_2_0());
					}
					lv_matchs_11_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFinalStageRule());
						}
						add(
							$current,
							"matchs",
							lv_matchs_11_0,
							"org.xtext.example.mydsl1.EsportDsl.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getFinalStageAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFinalStageAccess().getMatchsMatchParserRuleCall_8_3_1_0());
						}
						lv_matchs_13_0=ruleMatch
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFinalStageRule());
							}
							add(
								$current,
								"matchs",
								lv_matchs_13_0,
								"org.xtext.example.mydsl1.EsportDsl.Match");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getFinalStageAccess().getRightParenthesisKeyword_8_4());
			}
		)?
	)
;

// Entry rule entryRuleGroupStage
entryRuleGroupStage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupStageRule()); }
	iv_ruleGroupStage=ruleGroupStage
	{ $current=$iv_ruleGroupStage.current; }
	EOF;

// Rule GroupStage
ruleGroupStage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupStageAccess().getGroupStageAction_0(),
					$current);
			}
		)
		otherlv_1='GroupStage'
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupStageAccess().getGroupStageKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupStageAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupStageAccess().getTypeGroupStageTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleGroupStageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupStageRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl1.EsportDsl.GroupStageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupStageAccess().getMaxNbGamesEIntParserRuleCall_4_0());
				}
				lv_maxNbGames_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupStageRule());
					}
					set(
						$current,
						"maxNbGames",
						lv_maxNbGames_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupStageAccess().getMeetingsInSameGroupEIntParserRuleCall_5_0());
				}
				lv_meetingsInSameGroup_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupStageRule());
					}
					set(
						$current,
						"meetingsInSameGroup",
						lv_meetingsInSameGroup_5_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupStageAccess().getMeetingsWithOtherGroupsEIntParserRuleCall_6_0());
				}
				lv_meetingsWithOtherGroups_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupStageRule());
					}
					set(
						$current,
						"meetingsWithOtherGroups",
						lv_meetingsWithOtherGroups_6_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getGroupStageAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupStageAccess().getGroupsGroupParserRuleCall_7_1_0());
					}
					lv_groups_8_0=ruleGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupStageRule());
						}
						add(
							$current,
							"groups",
							lv_groups_8_0,
							"org.xtext.example.mydsl1.EsportDsl.Group");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getGroupStageAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGroupStageAccess().getGroupsGroupParserRuleCall_7_2_1_0());
						}
						lv_groups_10_0=ruleGroup
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGroupStageRule());
							}
							add(
								$current,
								"groups",
								lv_groups_10_0,
								"org.xtext.example.mydsl1.EsportDsl.Group");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getGroupStageAccess().getRightParenthesisKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleMatch
entryRuleMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchRule()); }
	iv_ruleMatch=ruleMatch
	{ $current=$iv_ruleMatch.current; }
	EOF;

// Rule Match
ruleMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMatchAccess().getMatchAction_0(),
					$current);
			}
		)
		otherlv_1='Match'
		{
			newLeafNode(otherlv_1, grammarAccess.getMatchAccess().getMatchKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getMatchAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchAccess().getTypeMatchTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleMatchType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl1.EsportDsl.MatchType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchAccess().getLoserWinsEIntParserRuleCall_4_0());
				}
				lv_loserWins_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchRule());
					}
					set(
						$current,
						"loserWins",
						lv_loserWins_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMatchRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMatchAccess().getTeamWinnerTeamCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMatchRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMatchAccess().getTeamLoserTeamCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupAccess().getGroupAction_0(),
					$current);
			}
		)
		otherlv_1='Group'
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getGroupKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getColonKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGroupAccess().getTeamsTeamCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGroupAccess().getTeamsTeamCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getRightParenthesisKeyword_6());
		}
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupAccess().getMatchsMatchParserRuleCall_7_1_0());
					}
					lv_matchs_9_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupRule());
						}
						add(
							$current,
							"matchs",
							lv_matchs_9_0,
							"org.xtext.example.mydsl1.EsportDsl.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getGroupAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGroupAccess().getMatchsMatchParserRuleCall_7_2_1_0());
						}
						lv_matchs_11_0=ruleMatch
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGroupRule());
							}
							add(
								$current,
								"matchs",
								lv_matchs_11_0,
								"org.xtext.example.mydsl1.EsportDsl.Match");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getGroupAccess().getRightParenthesisKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRulePlayer
entryRulePlayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlayerRule()); }
	iv_rulePlayer=rulePlayer
	{ $current=$iv_rulePlayer.current; }
	EOF;

// Rule Player
rulePlayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlayerAccess().getPlayerAction_0(),
					$current);
			}
		)
		otherlv_1='Player'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlayerAccess().getPlayerKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlayerAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlayerRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getPlayerAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlayerAccess().getAgeEIntParserRuleCall_4_0());
				}
				lv_age_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlayerRule());
					}
					set(
						$current,
						"age",
						lv_age_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlayerRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPlayerAccess().getCountryCountryCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPlayerAccess().getPositionPositionEnumRuleCall_6_0());
				}
				lv_position_6_0=rulePosition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlayerRule());
					}
					set(
						$current,
						"position",
						lv_position_6_0,
						"org.xtext.example.mydsl1.EsportDsl.Position");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPlayerAccess().getDescriptionEStringParserRuleCall_7_0());
				}
				lv_description_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlayerRule());
					}
					set(
						$current,
						"description",
						lv_description_7_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getPlayerAccess().getLeftParenthesisKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPlayerAccess().getCapacitiesCapacityParserRuleCall_8_1_0());
					}
					lv_capacities_9_0=ruleCapacity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlayerRule());
						}
						add(
							$current,
							"capacities",
							lv_capacities_9_0,
							"org.xtext.example.mydsl1.EsportDsl.Capacity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getPlayerAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPlayerAccess().getCapacitiesCapacityParserRuleCall_8_2_1_0());
						}
						lv_capacities_11_0=ruleCapacity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlayerRule());
							}
							add(
								$current,
								"capacities",
								lv_capacities_11_0,
								"org.xtext.example.mydsl1.EsportDsl.Capacity");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getPlayerAccess().getRightParenthesisKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleCoach
entryRuleCoach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoachRule()); }
	iv_ruleCoach=ruleCoach
	{ $current=$iv_ruleCoach.current; }
	EOF;

// Rule Coach
ruleCoach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCoachAccess().getCoachAction_0(),
					$current);
			}
		)
		otherlv_1='Coach'
		{
			newLeafNode(otherlv_1, grammarAccess.getCoachAccess().getCoachKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoachAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoachRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCoachAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoachAccess().getAgeEIntParserRuleCall_4_0());
				}
				lv_age_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoachRule());
					}
					set(
						$current,
						"age",
						lv_age_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoachRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCoachAccess().getCountryCountryCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCoachAccess().getDescriptionEStringParserRuleCall_6_0());
				}
				lv_description_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoachRule());
					}
					set(
						$current,
						"description",
						lv_description_6_0,
						"org.xtext.example.mydsl1.EsportDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getCoachAccess().getLeftParenthesisKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCoachAccess().getCapacitiesCapacityParserRuleCall_7_1_0());
					}
					lv_capacities_8_0=ruleCapacity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCoachRule());
						}
						add(
							$current,
							"capacities",
							lv_capacities_8_0,
							"org.xtext.example.mydsl1.EsportDsl.Capacity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getCoachAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCoachAccess().getCapacitiesCapacityParserRuleCall_7_2_1_0());
						}
						lv_capacities_10_0=ruleCapacity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCoachRule());
							}
							add(
								$current,
								"capacities",
								lv_capacities_10_0,
								"org.xtext.example.mydsl1.EsportDsl.Capacity");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getCoachAccess().getRightParenthesisKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleCapacity
entryRuleCapacity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCapacityRule()); }
	iv_ruleCapacity=ruleCapacity
	{ $current=$iv_ruleCapacity.current; }
	EOF;

// Rule Capacity
ruleCapacity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCapacityAccess().getCapacityAction_0(),
					$current);
			}
		)
		otherlv_1='Capacity'
		{
			newLeafNode(otherlv_1, grammarAccess.getCapacityAccess().getCapacityKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCapacityAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCapacityAccess().getTypeCapacityTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleCapacityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCapacityRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl1.EsportDsl.CapacityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCapacityAccess().getValueEIntParserRuleCall_4_0());
				}
				lv_value_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCapacityRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.example.mydsl1.EsportDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule TournamentType
ruleTournamentType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='worlds'
			{
				$current = grammarAccess.getTournamentTypeAccess().getWorldsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTournamentTypeAccess().getWorldsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='regionals'
			{
				$current = grammarAccess.getTournamentTypeAccess().getRegionalsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTournamentTypeAccess().getRegionalsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='allStars'
			{
				$current = grammarAccess.getTournamentTypeAccess().getAllStarsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTournamentTypeAccess().getAllStarsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='promotion'
			{
				$current = grammarAccess.getTournamentTypeAccess().getPromotionEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTournamentTypeAccess().getPromotionEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='midSeasonInvitational'
			{
				$current = grammarAccess.getTournamentTypeAccess().getMidSeasonInvitationalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTournamentTypeAccess().getMidSeasonInvitationalEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='riftRivals'
			{
				$current = grammarAccess.getTournamentTypeAccess().getRiftRivalsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTournamentTypeAccess().getRiftRivalsEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='playOff'
			{
				$current = grammarAccess.getTournamentTypeAccess().getPlayOffEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTournamentTypeAccess().getPlayOffEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule MatchType
ruleMatchType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='group'
			{
				$current = grammarAccess.getMatchTypeAccess().getGroupEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMatchTypeAccess().getGroupEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='final'
			{
				$current = grammarAccess.getMatchTypeAccess().getFinalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMatchTypeAccess().getFinalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='semiFinal'
			{
				$current = grammarAccess.getMatchTypeAccess().getSemiFinalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMatchTypeAccess().getSemiFinalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='quarterFinal'
			{
				$current = grammarAccess.getMatchTypeAccess().getQuarterFinalEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMatchTypeAccess().getQuarterFinalEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='singleRoundElimination'
			{
				$current = grammarAccess.getMatchTypeAccess().getSingleRoundEliminationEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMatchTypeAccess().getSingleRoundEliminationEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule GroupStageType
ruleGroupStageType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='league'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getLeagueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGroupStageTypeAccess().getLeagueEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='worldsPlayIn'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getWorldsPlayInEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGroupStageTypeAccess().getWorldsPlayInEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='worldsGroup'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getWorldsGroupEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGroupStageTypeAccess().getWorldsGroupEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='riftRivalsGroup'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getRiftRivalsGroupEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getGroupStageTypeAccess().getRiftRivalsGroupEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='msiPlayIn'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getMsiPlayInEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getGroupStageTypeAccess().getMsiPlayInEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='msiGroup'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getMsiGroupEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getGroupStageTypeAccess().getMsiGroupEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='allStarsGroup'
			{
				$current = grammarAccess.getGroupStageTypeAccess().getAllStarsGroupEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getGroupStageTypeAccess().getAllStarsGroupEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule Season
ruleSeason returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='spring'
			{
				$current = grammarAccess.getSeasonAccess().getSpringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSeasonAccess().getSpringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='summer'
			{
				$current = grammarAccess.getSeasonAccess().getSummerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSeasonAccess().getSummerEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Position
rulePosition returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='attackDamageCarry'
			{
				$current = grammarAccess.getPositionAccess().getAttackDamageCarryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPositionAccess().getAttackDamageCarryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='support'
			{
				$current = grammarAccess.getPositionAccess().getSupportEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPositionAccess().getSupportEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='midLane'
			{
				$current = grammarAccess.getPositionAccess().getMidLaneEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPositionAccess().getMidLaneEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='topLane'
			{
				$current = grammarAccess.getPositionAccess().getTopLaneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPositionAccess().getTopLaneEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='jungle'
			{
				$current = grammarAccess.getPositionAccess().getJungleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPositionAccess().getJungleEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule CapacityType
ruleCapacityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='positioning'
			{
				$current = grammarAccess.getCapacityTypeAccess().getPositioningEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCapacityTypeAccess().getPositioningEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='stressManagement'
			{
				$current = grammarAccess.getCapacityTypeAccess().getStressManagementEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCapacityTypeAccess().getStressManagementEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='playmakingMechanics'
			{
				$current = grammarAccess.getCapacityTypeAccess().getPlaymakingMechanicsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCapacityTypeAccess().getPlaymakingMechanicsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='escapeMechanics'
			{
				$current = grammarAccess.getCapacityTypeAccess().getEscapeMechanicsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCapacityTypeAccess().getEscapeMechanicsEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='patience'
			{
				$current = grammarAccess.getCapacityTypeAccess().getPatienceEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCapacityTypeAccess().getPatienceEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='farm'
			{
				$current = grammarAccess.getCapacityTypeAccess().getFarmEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCapacityTypeAccess().getFarmEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='steal'
			{
				$current = grammarAccess.getCapacityTypeAccess().getStealEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getCapacityTypeAccess().getStealEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='splitPush'
			{
				$current = grammarAccess.getCapacityTypeAccess().getSplitPushEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getCapacityTypeAccess().getSplitPushEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='teamPlay'
			{
				$current = grammarAccess.getCapacityTypeAccess().getTeamPlayEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getCapacityTypeAccess().getTeamPlayEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='aggressivity'
			{
				$current = grammarAccess.getCapacityTypeAccess().getAggressivityEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getCapacityTypeAccess().getAggressivityEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='leadership'
			{
				$current = grammarAccess.getCapacityTypeAccess().getLeadershipEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getCapacityTypeAccess().getLeadershipEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='draft'
			{
				$current = grammarAccess.getCapacityTypeAccess().getDraftEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getCapacityTypeAccess().getDraftEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='pathing'
			{
				$current = grammarAccess.getCapacityTypeAccess().getPathingEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getCapacityTypeAccess().getPathingEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='awareness'
			{
				$current = grammarAccess.getCapacityTypeAccess().getAwarenessEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getCapacityTypeAccess().getAwarenessEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='experience'
			{
				$current = grammarAccess.getCapacityTypeAccess().getExperienceEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getCapacityTypeAccess().getExperienceEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='objectivePlay'
			{
				$current = grammarAccess.getCapacityTypeAccess().getObjectivePlayEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getCapacityTypeAccess().getObjectivePlayEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='metaGame'
			{
				$current = grammarAccess.getCapacityTypeAccess().getMetaGameEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getCapacityTypeAccess().getMetaGameEnumLiteralDeclaration_16());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
