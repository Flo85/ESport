/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl1.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EsportDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Root");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cZonesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cZonesZoneParserRuleCall_0_0 = (RuleCall)cZonesAssignment_0.eContents().get(0);
		private final Assignment cTournamentsAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTournamentsTournamentParserRuleCall_1_0 = (RuleCall)cTournamentsAssignment_1.eContents().get(0);
		private final Assignment cLeaguesAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cLeaguesLeagueParserRuleCall_2_0 = (RuleCall)cLeaguesAssignment_2.eContents().get(0);
		private final Assignment cTeamsAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cTeamsTeamParserRuleCall_3_0 = (RuleCall)cTeamsAssignment_3.eContents().get(0);
		private final Assignment cPersonsAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cPersonsPersonParserRuleCall_4_0 = (RuleCall)cPersonsAssignment_4.eContents().get(0);
		private final Assignment cQualificationsAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cQualificationsQualificationParserRuleCall_5_0 = (RuleCall)cQualificationsAssignment_5.eContents().get(0);
		private final Assignment cCountriesAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cCountriesCountryParserRuleCall_6_0 = (RuleCall)cCountriesAssignment_6.eContents().get(0);
		
		//Root:
		//	(zones+=Zone | tournaments+=Tournament | leagues+=League | teams+=Team | persons+=Person |
		//	qualifications+=Qualification | countries+=Country)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(zones+=Zone | tournaments+=Tournament | leagues+=League | teams+=Team | persons+=Person | qualifications+=Qualification
		//| countries+=Country)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//zones+=Zone
		public Assignment getZonesAssignment_0() { return cZonesAssignment_0; }
		
		//Zone
		public RuleCall getZonesZoneParserRuleCall_0_0() { return cZonesZoneParserRuleCall_0_0; }
		
		//tournaments+=Tournament
		public Assignment getTournamentsAssignment_1() { return cTournamentsAssignment_1; }
		
		//Tournament
		public RuleCall getTournamentsTournamentParserRuleCall_1_0() { return cTournamentsTournamentParserRuleCall_1_0; }
		
		//leagues+=League
		public Assignment getLeaguesAssignment_2() { return cLeaguesAssignment_2; }
		
		//League
		public RuleCall getLeaguesLeagueParserRuleCall_2_0() { return cLeaguesLeagueParserRuleCall_2_0; }
		
		//teams+=Team
		public Assignment getTeamsAssignment_3() { return cTeamsAssignment_3; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_3_0() { return cTeamsTeamParserRuleCall_3_0; }
		
		//persons+=Person
		public Assignment getPersonsAssignment_4() { return cPersonsAssignment_4; }
		
		//Person
		public RuleCall getPersonsPersonParserRuleCall_4_0() { return cPersonsPersonParserRuleCall_4_0; }
		
		//qualifications+=Qualification
		public Assignment getQualificationsAssignment_5() { return cQualificationsAssignment_5; }
		
		//Qualification
		public RuleCall getQualificationsQualificationParserRuleCall_5_0() { return cQualificationsQualificationParserRuleCall_5_0; }
		
		//countries+=Country
		public Assignment getCountriesAssignment_6() { return cCountriesAssignment_6; }
		
		//Country
		public RuleCall getCountriesCountryParserRuleCall_6_0() { return cCountriesCountryParserRuleCall_6_0; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Person");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlayerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCoachParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Person:
		//	Player | Coach;
		@Override public ParserRule getRule() { return rule; }
		
		//Player | Coach
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Player
		public RuleCall getPlayerParserRuleCall_0() { return cPlayerParserRuleCall_0; }
		
		//Coach
		public RuleCall getCoachParserRuleCall_1() { return cCoachParserRuleCall_1; }
	}
	public class ZoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Zone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cZoneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cZoneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCountriesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCountriesCountryParserRuleCall_5_0 = (RuleCall)cCountriesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCountriesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCountriesCountryParserRuleCall_6_1_0 = (RuleCall)cCountriesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTeamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTeamsTeamParserRuleCall_8_1_0 = (RuleCall)cTeamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cTeamsAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cTeamsTeamParserRuleCall_8_2_1_0 = (RuleCall)cTeamsAssignment_8_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//Zone:
		//	{Zone}
		//	'Zone'
		//	name=EString
		//	':'
		//	'(' countries+=Country ("," countries+=Country)* ')' ('(' teams+=Team ("," teams+=Team)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Zone} 'Zone' name=EString ':' '(' countries+=Country ("," countries+=Country)* ')' ('(' teams+=Team ("," teams+=Team)*
		//')')?
		public Group getGroup() { return cGroup; }
		
		//{Zone}
		public Action getZoneAction_0() { return cZoneAction_0; }
		
		//'Zone'
		public Keyword getZoneKeyword_1() { return cZoneKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//countries+=Country
		public Assignment getCountriesAssignment_5() { return cCountriesAssignment_5; }
		
		//Country
		public RuleCall getCountriesCountryParserRuleCall_5_0() { return cCountriesCountryParserRuleCall_5_0; }
		
		//("," countries+=Country)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//countries+=Country
		public Assignment getCountriesAssignment_6_1() { return cCountriesAssignment_6_1; }
		
		//Country
		public RuleCall getCountriesCountryParserRuleCall_6_1_0() { return cCountriesCountryParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//('(' teams+=Team ("," teams+=Team)* ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//teams+=Team
		public Assignment getTeamsAssignment_8_1() { return cTeamsAssignment_8_1; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_8_1_0() { return cTeamsTeamParserRuleCall_8_1_0; }
		
		//("," teams+=Team)*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//teams+=Team
		public Assignment getTeamsAssignment_8_2_1() { return cTeamsAssignment_8_2_1; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_8_2_1_0() { return cTeamsTeamParserRuleCall_8_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
	}
	public class TournamentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Tournament");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTournamentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTournamentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSizeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSizeEIntParserRuleCall_4_0 = (RuleCall)cSizeAssignment_4.eContents().get(0);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTournamentTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Assignment cYearAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cYearEIntParserRuleCall_6_0 = (RuleCall)cYearAssignment_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAllowedZonesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cAllowedZonesZoneCrossReference_8_0 = (CrossReference)cAllowedZonesAssignment_8.eContents().get(0);
		private final RuleCall cAllowedZonesZoneEStringParserRuleCall_8_0_1 = (RuleCall)cAllowedZonesZoneCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAllowedZonesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cAllowedZonesZoneCrossReference_9_1_0 = (CrossReference)cAllowedZonesAssignment_9_1.eContents().get(0);
		private final RuleCall cAllowedZonesZoneEStringParserRuleCall_9_1_0_1 = (RuleCall)cAllowedZonesZoneCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cLeftParenthesisKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cCountriesAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cCountriesCountryCrossReference_11_1_0 = (CrossReference)cCountriesAssignment_11_1.eContents().get(0);
		private final RuleCall cCountriesCountryEStringParserRuleCall_11_1_0_1 = (RuleCall)cCountriesCountryCrossReference_11_1_0.eContents().get(1);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cCommaKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cCountriesAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final CrossReference cCountriesCountryCrossReference_11_2_1_0 = (CrossReference)cCountriesAssignment_11_2_1.eContents().get(0);
		private final RuleCall cCountriesCountryEStringParserRuleCall_11_2_1_0_1 = (RuleCall)cCountriesCountryCrossReference_11_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cQualifiesForKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cQualifiesForAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cQualifiesForQualificationCrossReference_12_1_0 = (CrossReference)cQualifiesForAssignment_12_1.eContents().get(0);
		private final RuleCall cQualifiesForQualificationEStringParserRuleCall_12_1_0_1 = (RuleCall)cQualifiesForQualificationCrossReference_12_1_0.eContents().get(1);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cQualifiesFromKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cQualifiesFromAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final CrossReference cQualifiesFromQualificationCrossReference_13_2_0 = (CrossReference)cQualifiesFromAssignment_13_2.eContents().get(0);
		private final RuleCall cQualifiesFromQualificationEStringParserRuleCall_13_2_0_1 = (RuleCall)cQualifiesFromQualificationCrossReference_13_2_0.eContents().get(1);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cQualifiesFromAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final CrossReference cQualifiesFromQualificationCrossReference_13_3_1_0 = (CrossReference)cQualifiesFromAssignment_13_3_1.eContents().get(0);
		private final RuleCall cQualifiesFromQualificationEStringParserRuleCall_13_3_1_0_1 = (RuleCall)cQualifiesFromQualificationCrossReference_13_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cLeftParenthesisKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cFinalstagesAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cFinalstagesFinalStageParserRuleCall_14_1_0 = (RuleCall)cFinalstagesAssignment_14_1.eContents().get(0);
		private final Group cGroup_14_2 = (Group)cGroup_14.eContents().get(2);
		private final Keyword cCommaKeyword_14_2_0 = (Keyword)cGroup_14_2.eContents().get(0);
		private final Assignment cFinalstagesAssignment_14_2_1 = (Assignment)cGroup_14_2.eContents().get(1);
		private final RuleCall cFinalstagesFinalStageParserRuleCall_14_2_1_0 = (RuleCall)cFinalstagesAssignment_14_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14_3 = (Keyword)cGroup_14.eContents().get(3);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cLeftParenthesisKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cGroupstagesAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cGroupstagesGroupStageParserRuleCall_15_1_0 = (RuleCall)cGroupstagesAssignment_15_1.eContents().get(0);
		private final Group cGroup_15_2 = (Group)cGroup_15.eContents().get(2);
		private final Keyword cCommaKeyword_15_2_0 = (Keyword)cGroup_15_2.eContents().get(0);
		private final Assignment cGroupstagesAssignment_15_2_1 = (Assignment)cGroup_15_2.eContents().get(1);
		private final RuleCall cGroupstagesGroupStageParserRuleCall_15_2_1_0 = (RuleCall)cGroupstagesAssignment_15_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		
		//Tournament:
		//	{Tournament}
		//	'Tournament'
		//	name=EString
		//	':'
		//	size=EInt
		//	type=TournamentType
		//	year=EInt
		//	'(' allowedZones+=[Zone|EString] ("," allowedZones+=[Zone|EString])* ')' ('(' countries+=[Country|EString] (","
		//	countries+=[Country|EString])* ')')? ('qualifiesFor' qualifiesFor=[Qualification|EString])? ('qualifiesFrom' '('
		//	qualifiesFrom+=[Qualification|EString] ("," qualifiesFrom+=[Qualification|EString])* ')')? ('('
		//	finalstages+=FinalStage ("," finalstages+=FinalStage)* ')')? ('(' groupstages+=GroupStage (","
		//	groupstages+=GroupStage)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Tournament} 'Tournament' name=EString ':' size=EInt type=TournamentType year=EInt '(' allowedZones+=[Zone|EString] (","
		//allowedZones+=[Zone|EString])* ')' ('(' countries+=[Country|EString] ("," countries+=[Country|EString])* ')')?
		//('qualifiesFor' qualifiesFor=[Qualification|EString])? ('qualifiesFrom' '(' qualifiesFrom+=[Qualification|EString]
		//("," qualifiesFrom+=[Qualification|EString])* ')')? ('(' finalstages+=FinalStage ("," finalstages+=FinalStage)* ')')?
		//('(' groupstages+=GroupStage ("," groupstages+=GroupStage)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{Tournament}
		public Action getTournamentAction_0() { return cTournamentAction_0; }
		
		//'Tournament'
		public Keyword getTournamentKeyword_1() { return cTournamentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//size=EInt
		public Assignment getSizeAssignment_4() { return cSizeAssignment_4; }
		
		//EInt
		public RuleCall getSizeEIntParserRuleCall_4_0() { return cSizeEIntParserRuleCall_4_0; }
		
		//type=TournamentType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//TournamentType
		public RuleCall getTypeTournamentTypeEnumRuleCall_5_0() { return cTypeTournamentTypeEnumRuleCall_5_0; }
		
		//year=EInt
		public Assignment getYearAssignment_6() { return cYearAssignment_6; }
		
		//EInt
		public RuleCall getYearEIntParserRuleCall_6_0() { return cYearEIntParserRuleCall_6_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//allowedZones+=[Zone|EString]
		public Assignment getAllowedZonesAssignment_8() { return cAllowedZonesAssignment_8; }
		
		//[Zone|EString]
		public CrossReference getAllowedZonesZoneCrossReference_8_0() { return cAllowedZonesZoneCrossReference_8_0; }
		
		//EString
		public RuleCall getAllowedZonesZoneEStringParserRuleCall_8_0_1() { return cAllowedZonesZoneEStringParserRuleCall_8_0_1; }
		
		//("," allowedZones+=[Zone|EString])*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//allowedZones+=[Zone|EString]
		public Assignment getAllowedZonesAssignment_9_1() { return cAllowedZonesAssignment_9_1; }
		
		//[Zone|EString]
		public CrossReference getAllowedZonesZoneCrossReference_9_1_0() { return cAllowedZonesZoneCrossReference_9_1_0; }
		
		//EString
		public RuleCall getAllowedZonesZoneEStringParserRuleCall_9_1_0_1() { return cAllowedZonesZoneEStringParserRuleCall_9_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
		
		//('(' countries+=[Country|EString] ("," countries+=[Country|EString])* ')')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_11_0() { return cLeftParenthesisKeyword_11_0; }
		
		//countries+=[Country|EString]
		public Assignment getCountriesAssignment_11_1() { return cCountriesAssignment_11_1; }
		
		//[Country|EString]
		public CrossReference getCountriesCountryCrossReference_11_1_0() { return cCountriesCountryCrossReference_11_1_0; }
		
		//EString
		public RuleCall getCountriesCountryEStringParserRuleCall_11_1_0_1() { return cCountriesCountryEStringParserRuleCall_11_1_0_1; }
		
		//("," countries+=[Country|EString])*
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//","
		public Keyword getCommaKeyword_11_2_0() { return cCommaKeyword_11_2_0; }
		
		//countries+=[Country|EString]
		public Assignment getCountriesAssignment_11_2_1() { return cCountriesAssignment_11_2_1; }
		
		//[Country|EString]
		public CrossReference getCountriesCountryCrossReference_11_2_1_0() { return cCountriesCountryCrossReference_11_2_1_0; }
		
		//EString
		public RuleCall getCountriesCountryEStringParserRuleCall_11_2_1_0_1() { return cCountriesCountryEStringParserRuleCall_11_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11_3() { return cRightParenthesisKeyword_11_3; }
		
		//('qualifiesFor' qualifiesFor=[Qualification|EString])?
		public Group getGroup_12() { return cGroup_12; }
		
		//'qualifiesFor'
		public Keyword getQualifiesForKeyword_12_0() { return cQualifiesForKeyword_12_0; }
		
		//qualifiesFor=[Qualification|EString]
		public Assignment getQualifiesForAssignment_12_1() { return cQualifiesForAssignment_12_1; }
		
		//[Qualification|EString]
		public CrossReference getQualifiesForQualificationCrossReference_12_1_0() { return cQualifiesForQualificationCrossReference_12_1_0; }
		
		//EString
		public RuleCall getQualifiesForQualificationEStringParserRuleCall_12_1_0_1() { return cQualifiesForQualificationEStringParserRuleCall_12_1_0_1; }
		
		//('qualifiesFrom' '(' qualifiesFrom+=[Qualification|EString] ("," qualifiesFrom+=[Qualification|EString])* ')')?
		public Group getGroup_13() { return cGroup_13; }
		
		//'qualifiesFrom'
		public Keyword getQualifiesFromKeyword_13_0() { return cQualifiesFromKeyword_13_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_13_1() { return cLeftParenthesisKeyword_13_1; }
		
		//qualifiesFrom+=[Qualification|EString]
		public Assignment getQualifiesFromAssignment_13_2() { return cQualifiesFromAssignment_13_2; }
		
		//[Qualification|EString]
		public CrossReference getQualifiesFromQualificationCrossReference_13_2_0() { return cQualifiesFromQualificationCrossReference_13_2_0; }
		
		//EString
		public RuleCall getQualifiesFromQualificationEStringParserRuleCall_13_2_0_1() { return cQualifiesFromQualificationEStringParserRuleCall_13_2_0_1; }
		
		//("," qualifiesFrom+=[Qualification|EString])*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//qualifiesFrom+=[Qualification|EString]
		public Assignment getQualifiesFromAssignment_13_3_1() { return cQualifiesFromAssignment_13_3_1; }
		
		//[Qualification|EString]
		public CrossReference getQualifiesFromQualificationCrossReference_13_3_1_0() { return cQualifiesFromQualificationCrossReference_13_3_1_0; }
		
		//EString
		public RuleCall getQualifiesFromQualificationEStringParserRuleCall_13_3_1_0_1() { return cQualifiesFromQualificationEStringParserRuleCall_13_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_13_4() { return cRightParenthesisKeyword_13_4; }
		
		//('(' finalstages+=FinalStage ("," finalstages+=FinalStage)* ')')?
		public Group getGroup_14() { return cGroup_14; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_14_0() { return cLeftParenthesisKeyword_14_0; }
		
		//finalstages+=FinalStage
		public Assignment getFinalstagesAssignment_14_1() { return cFinalstagesAssignment_14_1; }
		
		//FinalStage
		public RuleCall getFinalstagesFinalStageParserRuleCall_14_1_0() { return cFinalstagesFinalStageParserRuleCall_14_1_0; }
		
		//("," finalstages+=FinalStage)*
		public Group getGroup_14_2() { return cGroup_14_2; }
		
		//","
		public Keyword getCommaKeyword_14_2_0() { return cCommaKeyword_14_2_0; }
		
		//finalstages+=FinalStage
		public Assignment getFinalstagesAssignment_14_2_1() { return cFinalstagesAssignment_14_2_1; }
		
		//FinalStage
		public RuleCall getFinalstagesFinalStageParserRuleCall_14_2_1_0() { return cFinalstagesFinalStageParserRuleCall_14_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_14_3() { return cRightParenthesisKeyword_14_3; }
		
		//('(' groupstages+=GroupStage ("," groupstages+=GroupStage)* ')')?
		public Group getGroup_15() { return cGroup_15; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_15_0() { return cLeftParenthesisKeyword_15_0; }
		
		//groupstages+=GroupStage
		public Assignment getGroupstagesAssignment_15_1() { return cGroupstagesAssignment_15_1; }
		
		//GroupStage
		public RuleCall getGroupstagesGroupStageParserRuleCall_15_1_0() { return cGroupstagesGroupStageParserRuleCall_15_1_0; }
		
		//("," groupstages+=GroupStage)*
		public Group getGroup_15_2() { return cGroup_15_2; }
		
		//","
		public Keyword getCommaKeyword_15_2_0() { return cCommaKeyword_15_2_0; }
		
		//groupstages+=GroupStage
		public Assignment getGroupstagesAssignment_15_2_1() { return cGroupstagesAssignment_15_2_1; }
		
		//GroupStage
		public RuleCall getGroupstagesGroupStageParserRuleCall_15_2_1_0() { return cGroupstagesGroupStageParserRuleCall_15_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_15_3() { return cRightParenthesisKeyword_15_3; }
	}
	public class LeagueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.League");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLeagueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeagueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSizeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSizeEIntParserRuleCall_4_0 = (RuleCall)cSizeAssignment_4.eContents().get(0);
		private final Assignment cYearAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cYearEIntParserRuleCall_5_0 = (RuleCall)cYearAssignment_5.eContents().get(0);
		private final Assignment cSeasonAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSeasonSeasonEnumRuleCall_6_0 = (RuleCall)cSeasonAssignment_6.eContents().get(0);
		private final Assignment cZoneAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cZoneZoneCrossReference_7_0 = (CrossReference)cZoneAssignment_7.eContents().get(0);
		private final RuleCall cZoneZoneEStringParserRuleCall_7_0_1 = (RuleCall)cZoneZoneCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cQualifiesForAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cQualifiesForQualificationCrossReference_8_1_0 = (CrossReference)cQualifiesForAssignment_8_1.eContents().get(0);
		private final RuleCall cQualifiesForQualificationEStringParserRuleCall_8_1_0_1 = (RuleCall)cQualifiesForQualificationCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cQualifiesForAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cQualifiesForQualificationCrossReference_8_2_1_0 = (CrossReference)cQualifiesForAssignment_8_2_1.eContents().get(0);
		private final RuleCall cQualifiesForQualificationEStringParserRuleCall_8_2_1_0_1 = (RuleCall)cQualifiesForQualificationCrossReference_8_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cGroupstageAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cGroupstageGroupStageParserRuleCall_9_0 = (RuleCall)cGroupstageAssignment_9.eContents().get(0);
		
		//League:
		//	{League}
		//	'League'
		//	name=EString
		//	":"
		//	size=EInt
		//	year=EInt
		//	season=Season
		//	zone=[Zone|EString]? ('(' qualifiesFor+=[Qualification|EString] ("," qualifiesFor+=[Qualification|EString])* ')')?
		//	groupstage=GroupStage?;
		@Override public ParserRule getRule() { return rule; }
		
		//{League} 'League' name=EString ":" size=EInt year=EInt season=Season zone=[Zone|EString]? ('('
		//qualifiesFor+=[Qualification|EString] ("," qualifiesFor+=[Qualification|EString])* ')')? groupstage=GroupStage?
		public Group getGroup() { return cGroup; }
		
		//{League}
		public Action getLeagueAction_0() { return cLeagueAction_0; }
		
		//'League'
		public Keyword getLeagueKeyword_1() { return cLeagueKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//size=EInt
		public Assignment getSizeAssignment_4() { return cSizeAssignment_4; }
		
		//EInt
		public RuleCall getSizeEIntParserRuleCall_4_0() { return cSizeEIntParserRuleCall_4_0; }
		
		//year=EInt
		public Assignment getYearAssignment_5() { return cYearAssignment_5; }
		
		//EInt
		public RuleCall getYearEIntParserRuleCall_5_0() { return cYearEIntParserRuleCall_5_0; }
		
		//season=Season
		public Assignment getSeasonAssignment_6() { return cSeasonAssignment_6; }
		
		//Season
		public RuleCall getSeasonSeasonEnumRuleCall_6_0() { return cSeasonSeasonEnumRuleCall_6_0; }
		
		//zone=[Zone|EString]?
		public Assignment getZoneAssignment_7() { return cZoneAssignment_7; }
		
		//[Zone|EString]
		public CrossReference getZoneZoneCrossReference_7_0() { return cZoneZoneCrossReference_7_0; }
		
		//EString
		public RuleCall getZoneZoneEStringParserRuleCall_7_0_1() { return cZoneZoneEStringParserRuleCall_7_0_1; }
		
		//('(' qualifiesFor+=[Qualification|EString] ("," qualifiesFor+=[Qualification|EString])* ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//qualifiesFor+=[Qualification|EString]
		public Assignment getQualifiesForAssignment_8_1() { return cQualifiesForAssignment_8_1; }
		
		//[Qualification|EString]
		public CrossReference getQualifiesForQualificationCrossReference_8_1_0() { return cQualifiesForQualificationCrossReference_8_1_0; }
		
		//EString
		public RuleCall getQualifiesForQualificationEStringParserRuleCall_8_1_0_1() { return cQualifiesForQualificationEStringParserRuleCall_8_1_0_1; }
		
		//("," qualifiesFor+=[Qualification|EString])*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//qualifiesFor+=[Qualification|EString]
		public Assignment getQualifiesForAssignment_8_2_1() { return cQualifiesForAssignment_8_2_1; }
		
		//[Qualification|EString]
		public CrossReference getQualifiesForQualificationCrossReference_8_2_1_0() { return cQualifiesForQualificationCrossReference_8_2_1_0; }
		
		//EString
		public RuleCall getQualifiesForQualificationEStringParserRuleCall_8_2_1_0_1() { return cQualifiesForQualificationEStringParserRuleCall_8_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
		
		//groupstage=GroupStage?
		public Assignment getGroupstageAssignment_9() { return cGroupstageAssignment_9; }
		
		//GroupStage
		public RuleCall getGroupstageGroupStageParserRuleCall_9_0() { return cGroupstageGroupStageParserRuleCall_9_0; }
	}
	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTeamAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTeamKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cChampionshipPointsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChampionshipPointsEIntParserRuleCall_4_0 = (RuleCall)cChampionshipPointsAssignment_4.eContents().get(0);
		private final Assignment cCoachAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCoachCoachParserRuleCall_5_0 = (RuleCall)cCoachAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPlayersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPlayersPlayerParserRuleCall_7_0 = (RuleCall)cPlayersAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPlayersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPlayersPlayerParserRuleCall_8_1_0 = (RuleCall)cPlayersAssignment_8_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Team:
		//	{Team}
		//	'Team'
		//	name=EString
		//	':'
		//	championshipPoints=EInt
		//	coach=Coach?
		//	'(' players+=Player ("," players+=Player)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Team} 'Team' name=EString ':' championshipPoints=EInt coach=Coach? '(' players+=Player ("," players+=Player)* ')'
		public Group getGroup() { return cGroup; }
		
		//{Team}
		public Action getTeamAction_0() { return cTeamAction_0; }
		
		//'Team'
		public Keyword getTeamKeyword_1() { return cTeamKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//championshipPoints=EInt
		public Assignment getChampionshipPointsAssignment_4() { return cChampionshipPointsAssignment_4; }
		
		//EInt
		public RuleCall getChampionshipPointsEIntParserRuleCall_4_0() { return cChampionshipPointsEIntParserRuleCall_4_0; }
		
		//coach=Coach?
		public Assignment getCoachAssignment_5() { return cCoachAssignment_5; }
		
		//Coach
		public RuleCall getCoachCoachParserRuleCall_5_0() { return cCoachCoachParserRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//players+=Player
		public Assignment getPlayersAssignment_7() { return cPlayersAssignment_7; }
		
		//Player
		public RuleCall getPlayersPlayerParserRuleCall_7_0() { return cPlayersPlayerParserRuleCall_7_0; }
		
		//("," players+=Player)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//players+=Player
		public Assignment getPlayersAssignment_8_1() { return cPlayersAssignment_8_1; }
		
		//Player
		public RuleCall getPlayersPlayerParserRuleCall_8_1_0() { return cPlayersPlayerParserRuleCall_8_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
	}
	public class QualificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Qualification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQualificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQualificationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Qualification:
		//	{Qualification}
		//	'Qualification'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Qualification} 'Qualification' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Qualification}
		public Action getQualificationAction_0() { return cQualificationAction_0; }
		
		//'Qualification'
		public Keyword getQualificationKeyword_1() { return cQualificationKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class CountryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Country");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCountryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCountryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Country:
		//	{Country}
		//	'Country'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Country} 'Country' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Country}
		public Action getCountryAction_0() { return cCountryAction_0; }
		
		//'Country'
		public Keyword getCountryKeyword_1() { return cCountryKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FinalStageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.FinalStage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFinalStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFinalStageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMaxNbGamesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMaxNbGamesEIntParserRuleCall_3_0 = (RuleCall)cMaxNbGamesAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTeamsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTeamsTeamCrossReference_5_0 = (CrossReference)cTeamsAssignment_5.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_5_0_1 = (RuleCall)cTeamsTeamCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTeamsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTeamsTeamCrossReference_6_1_0 = (CrossReference)cTeamsAssignment_6_1.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_6_1_0_1 = (RuleCall)cTeamsTeamCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cMatchsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cMatchsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cMatchsMatchParserRuleCall_8_2_0 = (RuleCall)cMatchsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cMatchsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cMatchsMatchParserRuleCall_8_3_1_0 = (RuleCall)cMatchsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		
		//FinalStage:
		//	{FinalStage}
		//	'FinalStage'
		//	':'
		//	maxNbGames=EInt
		//	'(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('matchs' '(' matchs+=Match ("," matchs+=Match)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{FinalStage} 'FinalStage' ':' maxNbGames=EInt '(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('matchs' '('
		//matchs+=Match ("," matchs+=Match)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{FinalStage}
		public Action getFinalStageAction_0() { return cFinalStageAction_0; }
		
		//'FinalStage'
		public Keyword getFinalStageKeyword_1() { return cFinalStageKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//maxNbGames=EInt
		public Assignment getMaxNbGamesAssignment_3() { return cMaxNbGamesAssignment_3; }
		
		//EInt
		public RuleCall getMaxNbGamesEIntParserRuleCall_3_0() { return cMaxNbGamesEIntParserRuleCall_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_5() { return cTeamsAssignment_5; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_5_0() { return cTeamsTeamCrossReference_5_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_5_0_1() { return cTeamsTeamEStringParserRuleCall_5_0_1; }
		
		//("," teams+=[Team|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_6_1() { return cTeamsAssignment_6_1; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_6_1_0() { return cTeamsTeamCrossReference_6_1_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_6_1_0_1() { return cTeamsTeamEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//('matchs' '(' matchs+=Match ("," matchs+=Match)* ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'matchs'
		public Keyword getMatchsKeyword_8_0() { return cMatchsKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//matchs+=Match
		public Assignment getMatchsAssignment_8_2() { return cMatchsAssignment_8_2; }
		
		//Match
		public RuleCall getMatchsMatchParserRuleCall_8_2_0() { return cMatchsMatchParserRuleCall_8_2_0; }
		
		//("," matchs+=Match)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//matchs+=Match
		public Assignment getMatchsAssignment_8_3_1() { return cMatchsAssignment_8_3_1; }
		
		//Match
		public RuleCall getMatchsMatchParserRuleCall_8_3_1_0() { return cMatchsMatchParserRuleCall_8_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }
	}
	public class GroupStageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.GroupStage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupStageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroupStageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeGroupStageTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cMaxNbGamesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMaxNbGamesEIntParserRuleCall_4_0 = (RuleCall)cMaxNbGamesAssignment_4.eContents().get(0);
		private final Assignment cMeetingsInSameGroupAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMeetingsInSameGroupEIntParserRuleCall_5_0 = (RuleCall)cMeetingsInSameGroupAssignment_5.eContents().get(0);
		private final Assignment cMeetingsWithOtherGroupsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMeetingsWithOtherGroupsEIntParserRuleCall_6_0 = (RuleCall)cMeetingsWithOtherGroupsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGroupsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGroupsGroupParserRuleCall_7_1_0 = (RuleCall)cGroupsAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cGroupsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cGroupsGroupParserRuleCall_7_2_1_0 = (RuleCall)cGroupsAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//GroupStage:
		//	{GroupStage}
		//	'GroupStage'
		//	':'
		//	type=GroupStageType
		//	maxNbGames=EInt
		//	meetingsInSameGroup=EInt
		//	meetingsWithOtherGroups=EInt? ('(' groups+=Group ("," groups+=Group)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupStage} 'GroupStage' ':' type=GroupStageType maxNbGames=EInt meetingsInSameGroup=EInt meetingsWithOtherGroups=EInt?
		//('(' groups+=Group ("," groups+=Group)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{GroupStage}
		public Action getGroupStageAction_0() { return cGroupStageAction_0; }
		
		//'GroupStage'
		public Keyword getGroupStageKeyword_1() { return cGroupStageKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=GroupStageType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//GroupStageType
		public RuleCall getTypeGroupStageTypeEnumRuleCall_3_0() { return cTypeGroupStageTypeEnumRuleCall_3_0; }
		
		//maxNbGames=EInt
		public Assignment getMaxNbGamesAssignment_4() { return cMaxNbGamesAssignment_4; }
		
		//EInt
		public RuleCall getMaxNbGamesEIntParserRuleCall_4_0() { return cMaxNbGamesEIntParserRuleCall_4_0; }
		
		//meetingsInSameGroup=EInt
		public Assignment getMeetingsInSameGroupAssignment_5() { return cMeetingsInSameGroupAssignment_5; }
		
		//EInt
		public RuleCall getMeetingsInSameGroupEIntParserRuleCall_5_0() { return cMeetingsInSameGroupEIntParserRuleCall_5_0; }
		
		//meetingsWithOtherGroups=EInt?
		public Assignment getMeetingsWithOtherGroupsAssignment_6() { return cMeetingsWithOtherGroupsAssignment_6; }
		
		//EInt
		public RuleCall getMeetingsWithOtherGroupsEIntParserRuleCall_6_0() { return cMeetingsWithOtherGroupsEIntParserRuleCall_6_0; }
		
		//('(' groups+=Group ("," groups+=Group)* ')')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_0() { return cLeftParenthesisKeyword_7_0; }
		
		//groups+=Group
		public Assignment getGroupsAssignment_7_1() { return cGroupsAssignment_7_1; }
		
		//Group
		public RuleCall getGroupsGroupParserRuleCall_7_1_0() { return cGroupsGroupParserRuleCall_7_1_0; }
		
		//("," groups+=Group)*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//groups+=Group
		public Assignment getGroupsAssignment_7_2_1() { return cGroupsAssignment_7_2_1; }
		
		//Group
		public RuleCall getGroupsGroupParserRuleCall_7_2_1_0() { return cGroupsGroupParserRuleCall_7_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_3() { return cRightParenthesisKeyword_7_3; }
	}
	public class MatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Match");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMatchAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMatchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeMatchTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cLoserWinsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLoserWinsEIntParserRuleCall_4_0 = (RuleCall)cLoserWinsAssignment_4.eContents().get(0);
		private final Assignment cTeamWinnerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTeamWinnerTeamCrossReference_5_0 = (CrossReference)cTeamWinnerAssignment_5.eContents().get(0);
		private final RuleCall cTeamWinnerTeamEStringParserRuleCall_5_0_1 = (RuleCall)cTeamWinnerTeamCrossReference_5_0.eContents().get(1);
		private final Assignment cTeamLoserAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTeamLoserTeamCrossReference_6_0 = (CrossReference)cTeamLoserAssignment_6.eContents().get(0);
		private final RuleCall cTeamLoserTeamEStringParserRuleCall_6_0_1 = (RuleCall)cTeamLoserTeamCrossReference_6_0.eContents().get(1);
		
		//Match:
		//	{Match}
		//	'Match'
		//	':'
		//	type=MatchType
		//	loserWins=EInt
		//	teamWinner=[Team|EString] teamLoser=[Team|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//{Match} 'Match' ':' type=MatchType loserWins=EInt teamWinner=[Team|EString] teamLoser=[Team|EString]
		public Group getGroup() { return cGroup; }
		
		//{Match}
		public Action getMatchAction_0() { return cMatchAction_0; }
		
		//'Match'
		public Keyword getMatchKeyword_1() { return cMatchKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=MatchType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//MatchType
		public RuleCall getTypeMatchTypeEnumRuleCall_3_0() { return cTypeMatchTypeEnumRuleCall_3_0; }
		
		//loserWins=EInt
		public Assignment getLoserWinsAssignment_4() { return cLoserWinsAssignment_4; }
		
		//EInt
		public RuleCall getLoserWinsEIntParserRuleCall_4_0() { return cLoserWinsEIntParserRuleCall_4_0; }
		
		//teamWinner=[Team|EString]
		public Assignment getTeamWinnerAssignment_5() { return cTeamWinnerAssignment_5; }
		
		//[Team|EString]
		public CrossReference getTeamWinnerTeamCrossReference_5_0() { return cTeamWinnerTeamCrossReference_5_0; }
		
		//EString
		public RuleCall getTeamWinnerTeamEStringParserRuleCall_5_0_1() { return cTeamWinnerTeamEStringParserRuleCall_5_0_1; }
		
		//teamLoser=[Team|EString]
		public Assignment getTeamLoserAssignment_6() { return cTeamLoserAssignment_6; }
		
		//[Team|EString]
		public CrossReference getTeamLoserTeamCrossReference_6_0() { return cTeamLoserTeamCrossReference_6_0; }
		
		//EString
		public RuleCall getTeamLoserTeamEStringParserRuleCall_6_0_1() { return cTeamLoserTeamEStringParserRuleCall_6_0_1; }
	}
	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTeamsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTeamsTeamCrossReference_4_0 = (CrossReference)cTeamsAssignment_4.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_4_0_1 = (RuleCall)cTeamsTeamCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTeamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTeamsTeamCrossReference_5_1_0 = (CrossReference)cTeamsAssignment_5_1.eContents().get(0);
		private final RuleCall cTeamsTeamEStringParserRuleCall_5_1_0_1 = (RuleCall)cTeamsTeamCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMatchsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMatchsMatchParserRuleCall_7_1_0 = (RuleCall)cMatchsAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cMatchsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cMatchsMatchParserRuleCall_7_2_1_0 = (RuleCall)cMatchsAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//Group:
		//	{Group}
		//	'Group'
		//	':'
		//	'(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('(' matchs+=Match ("," matchs+=Match)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Group} 'Group' ':' '(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('(' matchs+=Match ("," matchs+=Match)*
		//')')?
		public Group getGroup() { return cGroup; }
		
		//{Group}
		public Action getGroupAction_0() { return cGroupAction_0; }
		
		//'Group'
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_4() { return cTeamsAssignment_4; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_4_0() { return cTeamsTeamCrossReference_4_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_4_0_1() { return cTeamsTeamEStringParserRuleCall_4_0_1; }
		
		//("," teams+=[Team|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//teams+=[Team|EString]
		public Assignment getTeamsAssignment_5_1() { return cTeamsAssignment_5_1; }
		
		//[Team|EString]
		public CrossReference getTeamsTeamCrossReference_5_1_0() { return cTeamsTeamCrossReference_5_1_0; }
		
		//EString
		public RuleCall getTeamsTeamEStringParserRuleCall_5_1_0_1() { return cTeamsTeamEStringParserRuleCall_5_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//('(' matchs+=Match ("," matchs+=Match)* ')')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_0() { return cLeftParenthesisKeyword_7_0; }
		
		//matchs+=Match
		public Assignment getMatchsAssignment_7_1() { return cMatchsAssignment_7_1; }
		
		//Match
		public RuleCall getMatchsMatchParserRuleCall_7_1_0() { return cMatchsMatchParserRuleCall_7_1_0; }
		
		//("," matchs+=Match)*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//matchs+=Match
		public Assignment getMatchsAssignment_7_2_1() { return cMatchsAssignment_7_2_1; }
		
		//Match
		public RuleCall getMatchsMatchParserRuleCall_7_2_1_0() { return cMatchsMatchParserRuleCall_7_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_3() { return cRightParenthesisKeyword_7_3; }
	}
	public class PlayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Player");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlayerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlayerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAgeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAgeEIntParserRuleCall_4_0 = (RuleCall)cAgeAssignment_4.eContents().get(0);
		private final Assignment cCountryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cCountryCountryCrossReference_5_0 = (CrossReference)cCountryAssignment_5.eContents().get(0);
		private final RuleCall cCountryCountryEStringParserRuleCall_5_0_1 = (RuleCall)cCountryCountryCrossReference_5_0.eContents().get(1);
		private final Assignment cPositionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPositionPositionEnumRuleCall_6_0 = (RuleCall)cPositionAssignment_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionEStringParserRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCapacitiesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCapacitiesCapacityParserRuleCall_8_1_0 = (RuleCall)cCapacitiesAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cCapacitiesAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cCapacitiesCapacityParserRuleCall_8_2_1_0 = (RuleCall)cCapacitiesAssignment_8_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//Player:
		//	{Player}
		//	'Player'
		//	name=EString
		//	':'
		//	age=EInt
		//	country=[Country|EString] position=Position?
		//	description=EString? ('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Player} 'Player' name=EString ':' age=EInt country=[Country|EString] position=Position? description=EString? ('('
		//capacities+=Capacity ("," capacities+=Capacity)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{Player}
		public Action getPlayerAction_0() { return cPlayerAction_0; }
		
		//'Player'
		public Keyword getPlayerKeyword_1() { return cPlayerKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//age=EInt
		public Assignment getAgeAssignment_4() { return cAgeAssignment_4; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_0() { return cAgeEIntParserRuleCall_4_0; }
		
		//country=[Country|EString]
		public Assignment getCountryAssignment_5() { return cCountryAssignment_5; }
		
		//[Country|EString]
		public CrossReference getCountryCountryCrossReference_5_0() { return cCountryCountryCrossReference_5_0; }
		
		//EString
		public RuleCall getCountryCountryEStringParserRuleCall_5_0_1() { return cCountryCountryEStringParserRuleCall_5_0_1; }
		
		//position=Position?
		public Assignment getPositionAssignment_6() { return cPositionAssignment_6; }
		
		//Position
		public RuleCall getPositionPositionEnumRuleCall_6_0() { return cPositionPositionEnumRuleCall_6_0; }
		
		//description=EString?
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_7_0() { return cDescriptionEStringParserRuleCall_7_0; }
		
		//('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//capacities+=Capacity
		public Assignment getCapacitiesAssignment_8_1() { return cCapacitiesAssignment_8_1; }
		
		//Capacity
		public RuleCall getCapacitiesCapacityParserRuleCall_8_1_0() { return cCapacitiesCapacityParserRuleCall_8_1_0; }
		
		//("," capacities+=Capacity)*
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }
		
		//capacities+=Capacity
		public Assignment getCapacitiesAssignment_8_2_1() { return cCapacitiesAssignment_8_2_1; }
		
		//Capacity
		public RuleCall getCapacitiesCapacityParserRuleCall_8_2_1_0() { return cCapacitiesCapacityParserRuleCall_8_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
	}
	public class CoachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Coach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCoachAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCoachKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAgeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAgeEIntParserRuleCall_4_0 = (RuleCall)cAgeAssignment_4.eContents().get(0);
		private final Assignment cCountryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cCountryCountryCrossReference_5_0 = (CrossReference)cCountryAssignment_5.eContents().get(0);
		private final RuleCall cCountryCountryEStringParserRuleCall_5_0_1 = (RuleCall)cCountryCountryCrossReference_5_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionEStringParserRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCapacitiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCapacitiesCapacityParserRuleCall_7_1_0 = (RuleCall)cCapacitiesAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cCapacitiesAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cCapacitiesCapacityParserRuleCall_7_2_1_0 = (RuleCall)cCapacitiesAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//Coach:
		//	{Coach}
		//	'Coach'
		//	name=EString
		//	':'
		//	age=EInt
		//	country=[Country|EString] description=EString? ('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Coach} 'Coach' name=EString ':' age=EInt country=[Country|EString] description=EString? ('(' capacities+=Capacity (","
		//capacities+=Capacity)* ')')?
		public Group getGroup() { return cGroup; }
		
		//{Coach}
		public Action getCoachAction_0() { return cCoachAction_0; }
		
		//'Coach'
		public Keyword getCoachKeyword_1() { return cCoachKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//age=EInt
		public Assignment getAgeAssignment_4() { return cAgeAssignment_4; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_0() { return cAgeEIntParserRuleCall_4_0; }
		
		//country=[Country|EString]
		public Assignment getCountryAssignment_5() { return cCountryAssignment_5; }
		
		//[Country|EString]
		public CrossReference getCountryCountryCrossReference_5_0() { return cCountryCountryCrossReference_5_0; }
		
		//EString
		public RuleCall getCountryCountryEStringParserRuleCall_5_0_1() { return cCountryCountryEStringParserRuleCall_5_0_1; }
		
		//description=EString?
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_0() { return cDescriptionEStringParserRuleCall_6_0; }
		
		//('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_0() { return cLeftParenthesisKeyword_7_0; }
		
		//capacities+=Capacity
		public Assignment getCapacitiesAssignment_7_1() { return cCapacitiesAssignment_7_1; }
		
		//Capacity
		public RuleCall getCapacitiesCapacityParserRuleCall_7_1_0() { return cCapacitiesCapacityParserRuleCall_7_1_0; }
		
		//("," capacities+=Capacity)*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//capacities+=Capacity
		public Assignment getCapacitiesAssignment_7_2_1() { return cCapacitiesAssignment_7_2_1; }
		
		//Capacity
		public RuleCall getCapacitiesCapacityParserRuleCall_7_2_1_0() { return cCapacitiesCapacityParserRuleCall_7_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_3() { return cRightParenthesisKeyword_7_3; }
	}
	public class CapacityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Capacity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCapacityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCapacityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeCapacityTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEIntParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		
		//Capacity:
		//	{Capacity}
		//	'Capacity'
		//	':'
		//	type=CapacityType
		//	value=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//{Capacity} 'Capacity' ':' type=CapacityType value=EInt
		public Group getGroup() { return cGroup; }
		
		//{Capacity}
		public Action getCapacityAction_0() { return cCapacityAction_0; }
		
		//'Capacity'
		public Keyword getCapacityKeyword_1() { return cCapacityKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=CapacityType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//CapacityType
		public RuleCall getTypeCapacityTypeEnumRuleCall_3_0() { return cTypeCapacityTypeEnumRuleCall_3_0; }
		
		//value=EInt
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_4_0() { return cValueEIntParserRuleCall_4_0; }
	}
	
	public class TournamentTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.TournamentType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cWorldsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cWorldsWorldsKeyword_0_0 = (Keyword)cWorldsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRegionalsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRegionalsRegionalsKeyword_1_0 = (Keyword)cRegionalsEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAllStarsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAllStarsAllStarsKeyword_2_0 = (Keyword)cAllStarsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPromotionEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPromotionPromotionKeyword_3_0 = (Keyword)cPromotionEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMidSeasonInvitationalEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMidSeasonInvitationalMidSeasonInvitationalKeyword_4_0 = (Keyword)cMidSeasonInvitationalEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cRiftRivalsEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cRiftRivalsRiftRivalsKeyword_5_0 = (Keyword)cRiftRivalsEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPlayOffEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPlayOffPlayOffKeyword_6_0 = (Keyword)cPlayOffEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum TournamentType:
		//	worlds | regionals | allStars | promotion | midSeasonInvitational | riftRivals | playOff;
		public EnumRule getRule() { return rule; }
		
		//worlds | regionals | allStars | promotion | midSeasonInvitational | riftRivals | playOff
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//worlds
		public EnumLiteralDeclaration getWorldsEnumLiteralDeclaration_0() { return cWorldsEnumLiteralDeclaration_0; }
		
		//'worlds'
		public Keyword getWorldsWorldsKeyword_0_0() { return cWorldsWorldsKeyword_0_0; }
		
		//regionals
		public EnumLiteralDeclaration getRegionalsEnumLiteralDeclaration_1() { return cRegionalsEnumLiteralDeclaration_1; }
		
		//'regionals'
		public Keyword getRegionalsRegionalsKeyword_1_0() { return cRegionalsRegionalsKeyword_1_0; }
		
		//allStars
		public EnumLiteralDeclaration getAllStarsEnumLiteralDeclaration_2() { return cAllStarsEnumLiteralDeclaration_2; }
		
		//'allStars'
		public Keyword getAllStarsAllStarsKeyword_2_0() { return cAllStarsAllStarsKeyword_2_0; }
		
		//promotion
		public EnumLiteralDeclaration getPromotionEnumLiteralDeclaration_3() { return cPromotionEnumLiteralDeclaration_3; }
		
		//'promotion'
		public Keyword getPromotionPromotionKeyword_3_0() { return cPromotionPromotionKeyword_3_0; }
		
		//midSeasonInvitational
		public EnumLiteralDeclaration getMidSeasonInvitationalEnumLiteralDeclaration_4() { return cMidSeasonInvitationalEnumLiteralDeclaration_4; }
		
		//'midSeasonInvitational'
		public Keyword getMidSeasonInvitationalMidSeasonInvitationalKeyword_4_0() { return cMidSeasonInvitationalMidSeasonInvitationalKeyword_4_0; }
		
		//riftRivals
		public EnumLiteralDeclaration getRiftRivalsEnumLiteralDeclaration_5() { return cRiftRivalsEnumLiteralDeclaration_5; }
		
		//'riftRivals'
		public Keyword getRiftRivalsRiftRivalsKeyword_5_0() { return cRiftRivalsRiftRivalsKeyword_5_0; }
		
		//playOff
		public EnumLiteralDeclaration getPlayOffEnumLiteralDeclaration_6() { return cPlayOffEnumLiteralDeclaration_6; }
		
		//'playOff'
		public Keyword getPlayOffPlayOffKeyword_6_0() { return cPlayOffPlayOffKeyword_6_0; }
	}
	public class MatchTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.MatchType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGroupEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGroupGroupKeyword_0_0 = (Keyword)cGroupEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFinalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSemiFinalEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSemiFinalSemiFinalKeyword_2_0 = (Keyword)cSemiFinalEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cQuarterFinalEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cQuarterFinalQuarterFinalKeyword_3_0 = (Keyword)cQuarterFinalEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSingleRoundEliminationEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSingleRoundEliminationSingleRoundEliminationKeyword_4_0 = (Keyword)cSingleRoundEliminationEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MatchType:
		//	group | final | semiFinal | quarterFinal | singleRoundElimination;
		public EnumRule getRule() { return rule; }
		
		//group | final | semiFinal | quarterFinal | singleRoundElimination
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//group
		public EnumLiteralDeclaration getGroupEnumLiteralDeclaration_0() { return cGroupEnumLiteralDeclaration_0; }
		
		//'group'
		public Keyword getGroupGroupKeyword_0_0() { return cGroupGroupKeyword_0_0; }
		
		//final
		public EnumLiteralDeclaration getFinalEnumLiteralDeclaration_1() { return cFinalEnumLiteralDeclaration_1; }
		
		//'final'
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }
		
		//semiFinal
		public EnumLiteralDeclaration getSemiFinalEnumLiteralDeclaration_2() { return cSemiFinalEnumLiteralDeclaration_2; }
		
		//'semiFinal'
		public Keyword getSemiFinalSemiFinalKeyword_2_0() { return cSemiFinalSemiFinalKeyword_2_0; }
		
		//quarterFinal
		public EnumLiteralDeclaration getQuarterFinalEnumLiteralDeclaration_3() { return cQuarterFinalEnumLiteralDeclaration_3; }
		
		//'quarterFinal'
		public Keyword getQuarterFinalQuarterFinalKeyword_3_0() { return cQuarterFinalQuarterFinalKeyword_3_0; }
		
		//singleRoundElimination
		public EnumLiteralDeclaration getSingleRoundEliminationEnumLiteralDeclaration_4() { return cSingleRoundEliminationEnumLiteralDeclaration_4; }
		
		//'singleRoundElimination'
		public Keyword getSingleRoundEliminationSingleRoundEliminationKeyword_4_0() { return cSingleRoundEliminationSingleRoundEliminationKeyword_4_0; }
	}
	public class GroupStageTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.GroupStageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLeagueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLeagueLeagueKeyword_0_0 = (Keyword)cLeagueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWorldsPlayInEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWorldsPlayInWorldsPlayInKeyword_1_0 = (Keyword)cWorldsPlayInEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWorldsGroupEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWorldsGroupWorldsGroupKeyword_2_0 = (Keyword)cWorldsGroupEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRiftRivalsGroupEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRiftRivalsGroupRiftRivalsGroupKeyword_3_0 = (Keyword)cRiftRivalsGroupEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMsiPlayInEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMsiPlayInMsiPlayInKeyword_4_0 = (Keyword)cMsiPlayInEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMsiGroupEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMsiGroupMsiGroupKeyword_5_0 = (Keyword)cMsiGroupEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAllStarsGroupEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAllStarsGroupAllStarsGroupKeyword_6_0 = (Keyword)cAllStarsGroupEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum GroupStageType:
		//	league | worldsPlayIn | worldsGroup | riftRivalsGroup | msiPlayIn | msiGroup | allStarsGroup;
		public EnumRule getRule() { return rule; }
		
		//league | worldsPlayIn | worldsGroup | riftRivalsGroup | msiPlayIn | msiGroup | allStarsGroup
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//league
		public EnumLiteralDeclaration getLeagueEnumLiteralDeclaration_0() { return cLeagueEnumLiteralDeclaration_0; }
		
		//'league'
		public Keyword getLeagueLeagueKeyword_0_0() { return cLeagueLeagueKeyword_0_0; }
		
		//worldsPlayIn
		public EnumLiteralDeclaration getWorldsPlayInEnumLiteralDeclaration_1() { return cWorldsPlayInEnumLiteralDeclaration_1; }
		
		//'worldsPlayIn'
		public Keyword getWorldsPlayInWorldsPlayInKeyword_1_0() { return cWorldsPlayInWorldsPlayInKeyword_1_0; }
		
		//worldsGroup
		public EnumLiteralDeclaration getWorldsGroupEnumLiteralDeclaration_2() { return cWorldsGroupEnumLiteralDeclaration_2; }
		
		//'worldsGroup'
		public Keyword getWorldsGroupWorldsGroupKeyword_2_0() { return cWorldsGroupWorldsGroupKeyword_2_0; }
		
		//riftRivalsGroup
		public EnumLiteralDeclaration getRiftRivalsGroupEnumLiteralDeclaration_3() { return cRiftRivalsGroupEnumLiteralDeclaration_3; }
		
		//'riftRivalsGroup'
		public Keyword getRiftRivalsGroupRiftRivalsGroupKeyword_3_0() { return cRiftRivalsGroupRiftRivalsGroupKeyword_3_0; }
		
		//msiPlayIn
		public EnumLiteralDeclaration getMsiPlayInEnumLiteralDeclaration_4() { return cMsiPlayInEnumLiteralDeclaration_4; }
		
		//'msiPlayIn'
		public Keyword getMsiPlayInMsiPlayInKeyword_4_0() { return cMsiPlayInMsiPlayInKeyword_4_0; }
		
		//msiGroup
		public EnumLiteralDeclaration getMsiGroupEnumLiteralDeclaration_5() { return cMsiGroupEnumLiteralDeclaration_5; }
		
		//'msiGroup'
		public Keyword getMsiGroupMsiGroupKeyword_5_0() { return cMsiGroupMsiGroupKeyword_5_0; }
		
		//allStarsGroup
		public EnumLiteralDeclaration getAllStarsGroupEnumLiteralDeclaration_6() { return cAllStarsGroupEnumLiteralDeclaration_6; }
		
		//'allStarsGroup'
		public Keyword getAllStarsGroupAllStarsGroupKeyword_6_0() { return cAllStarsGroupAllStarsGroupKeyword_6_0; }
	}
	public class SeasonElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Season");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSpringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSpringSpringKeyword_0_0 = (Keyword)cSpringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSummerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSummerSummerKeyword_1_0 = (Keyword)cSummerEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Season:
		//	spring | summer;
		public EnumRule getRule() { return rule; }
		
		//spring | summer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//spring
		public EnumLiteralDeclaration getSpringEnumLiteralDeclaration_0() { return cSpringEnumLiteralDeclaration_0; }
		
		//'spring'
		public Keyword getSpringSpringKeyword_0_0() { return cSpringSpringKeyword_0_0; }
		
		//summer
		public EnumLiteralDeclaration getSummerEnumLiteralDeclaration_1() { return cSummerEnumLiteralDeclaration_1; }
		
		//'summer'
		public Keyword getSummerSummerKeyword_1_0() { return cSummerSummerKeyword_1_0; }
	}
	public class PositionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.Position");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAttackDamageCarryEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAttackDamageCarryAttackDamageCarryKeyword_0_0 = (Keyword)cAttackDamageCarryEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSupportEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSupportSupportKeyword_1_0 = (Keyword)cSupportEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMidLaneEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMidLaneMidLaneKeyword_2_0 = (Keyword)cMidLaneEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTopLaneEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTopLaneTopLaneKeyword_3_0 = (Keyword)cTopLaneEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cJungleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cJungleJungleKeyword_4_0 = (Keyword)cJungleEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Position:
		//	attackDamageCarry | support | midLane | topLane | jungle;
		public EnumRule getRule() { return rule; }
		
		//attackDamageCarry | support | midLane | topLane | jungle
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//attackDamageCarry
		public EnumLiteralDeclaration getAttackDamageCarryEnumLiteralDeclaration_0() { return cAttackDamageCarryEnumLiteralDeclaration_0; }
		
		//'attackDamageCarry'
		public Keyword getAttackDamageCarryAttackDamageCarryKeyword_0_0() { return cAttackDamageCarryAttackDamageCarryKeyword_0_0; }
		
		//support
		public EnumLiteralDeclaration getSupportEnumLiteralDeclaration_1() { return cSupportEnumLiteralDeclaration_1; }
		
		//'support'
		public Keyword getSupportSupportKeyword_1_0() { return cSupportSupportKeyword_1_0; }
		
		//midLane
		public EnumLiteralDeclaration getMidLaneEnumLiteralDeclaration_2() { return cMidLaneEnumLiteralDeclaration_2; }
		
		//'midLane'
		public Keyword getMidLaneMidLaneKeyword_2_0() { return cMidLaneMidLaneKeyword_2_0; }
		
		//topLane
		public EnumLiteralDeclaration getTopLaneEnumLiteralDeclaration_3() { return cTopLaneEnumLiteralDeclaration_3; }
		
		//'topLane'
		public Keyword getTopLaneTopLaneKeyword_3_0() { return cTopLaneTopLaneKeyword_3_0; }
		
		//jungle
		public EnumLiteralDeclaration getJungleEnumLiteralDeclaration_4() { return cJungleEnumLiteralDeclaration_4; }
		
		//'jungle'
		public Keyword getJungleJungleKeyword_4_0() { return cJungleJungleKeyword_4_0; }
	}
	public class CapacityTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl1.EsportDsl.CapacityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPositioningEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPositioningPositioningKeyword_0_0 = (Keyword)cPositioningEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStressManagementEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStressManagementStressManagementKeyword_1_0 = (Keyword)cStressManagementEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPlaymakingMechanicsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPlaymakingMechanicsPlaymakingMechanicsKeyword_2_0 = (Keyword)cPlaymakingMechanicsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cEscapeMechanicsEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cEscapeMechanicsEscapeMechanicsKeyword_3_0 = (Keyword)cEscapeMechanicsEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPatienceEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPatiencePatienceKeyword_4_0 = (Keyword)cPatienceEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFarmEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFarmFarmKeyword_5_0 = (Keyword)cFarmEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cStealEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cStealStealKeyword_6_0 = (Keyword)cStealEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSplitPushEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSplitPushSplitPushKeyword_7_0 = (Keyword)cSplitPushEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cTeamPlayEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cTeamPlayTeamPlayKeyword_8_0 = (Keyword)cTeamPlayEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cAggressivityEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cAggressivityAggressivityKeyword_9_0 = (Keyword)cAggressivityEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cLeadershipEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cLeadershipLeadershipKeyword_10_0 = (Keyword)cLeadershipEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cDraftEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cDraftDraftKeyword_11_0 = (Keyword)cDraftEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cPathingEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cPathingPathingKeyword_12_0 = (Keyword)cPathingEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cAwarenessEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cAwarenessAwarenessKeyword_13_0 = (Keyword)cAwarenessEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cExperienceEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cExperienceExperienceKeyword_14_0 = (Keyword)cExperienceEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cObjectivePlayEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cObjectivePlayObjectivePlayKeyword_15_0 = (Keyword)cObjectivePlayEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cMetaGameEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cMetaGameMetaGameKeyword_16_0 = (Keyword)cMetaGameEnumLiteralDeclaration_16.eContents().get(0);
		
		//enum CapacityType:
		//	positioning | stressManagement | playmakingMechanics | escapeMechanics | patience | farm | steal | splitPush |
		//	teamPlay | aggressivity | leadership | draft | pathing | awareness | experience | objectivePlay | metaGame;
		public EnumRule getRule() { return rule; }
		
		//positioning | stressManagement | playmakingMechanics | escapeMechanics | patience | farm | steal | splitPush | teamPlay
		//| aggressivity | leadership | draft | pathing | awareness | experience | objectivePlay | metaGame
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//positioning
		public EnumLiteralDeclaration getPositioningEnumLiteralDeclaration_0() { return cPositioningEnumLiteralDeclaration_0; }
		
		//'positioning'
		public Keyword getPositioningPositioningKeyword_0_0() { return cPositioningPositioningKeyword_0_0; }
		
		//stressManagement
		public EnumLiteralDeclaration getStressManagementEnumLiteralDeclaration_1() { return cStressManagementEnumLiteralDeclaration_1; }
		
		//'stressManagement'
		public Keyword getStressManagementStressManagementKeyword_1_0() { return cStressManagementStressManagementKeyword_1_0; }
		
		//playmakingMechanics
		public EnumLiteralDeclaration getPlaymakingMechanicsEnumLiteralDeclaration_2() { return cPlaymakingMechanicsEnumLiteralDeclaration_2; }
		
		//'playmakingMechanics'
		public Keyword getPlaymakingMechanicsPlaymakingMechanicsKeyword_2_0() { return cPlaymakingMechanicsPlaymakingMechanicsKeyword_2_0; }
		
		//escapeMechanics
		public EnumLiteralDeclaration getEscapeMechanicsEnumLiteralDeclaration_3() { return cEscapeMechanicsEnumLiteralDeclaration_3; }
		
		//'escapeMechanics'
		public Keyword getEscapeMechanicsEscapeMechanicsKeyword_3_0() { return cEscapeMechanicsEscapeMechanicsKeyword_3_0; }
		
		//patience
		public EnumLiteralDeclaration getPatienceEnumLiteralDeclaration_4() { return cPatienceEnumLiteralDeclaration_4; }
		
		//'patience'
		public Keyword getPatiencePatienceKeyword_4_0() { return cPatiencePatienceKeyword_4_0; }
		
		//farm
		public EnumLiteralDeclaration getFarmEnumLiteralDeclaration_5() { return cFarmEnumLiteralDeclaration_5; }
		
		//'farm'
		public Keyword getFarmFarmKeyword_5_0() { return cFarmFarmKeyword_5_0; }
		
		//steal
		public EnumLiteralDeclaration getStealEnumLiteralDeclaration_6() { return cStealEnumLiteralDeclaration_6; }
		
		//'steal'
		public Keyword getStealStealKeyword_6_0() { return cStealStealKeyword_6_0; }
		
		//splitPush
		public EnumLiteralDeclaration getSplitPushEnumLiteralDeclaration_7() { return cSplitPushEnumLiteralDeclaration_7; }
		
		//'splitPush'
		public Keyword getSplitPushSplitPushKeyword_7_0() { return cSplitPushSplitPushKeyword_7_0; }
		
		//teamPlay
		public EnumLiteralDeclaration getTeamPlayEnumLiteralDeclaration_8() { return cTeamPlayEnumLiteralDeclaration_8; }
		
		//'teamPlay'
		public Keyword getTeamPlayTeamPlayKeyword_8_0() { return cTeamPlayTeamPlayKeyword_8_0; }
		
		//aggressivity
		public EnumLiteralDeclaration getAggressivityEnumLiteralDeclaration_9() { return cAggressivityEnumLiteralDeclaration_9; }
		
		//'aggressivity'
		public Keyword getAggressivityAggressivityKeyword_9_0() { return cAggressivityAggressivityKeyword_9_0; }
		
		//leadership
		public EnumLiteralDeclaration getLeadershipEnumLiteralDeclaration_10() { return cLeadershipEnumLiteralDeclaration_10; }
		
		//'leadership'
		public Keyword getLeadershipLeadershipKeyword_10_0() { return cLeadershipLeadershipKeyword_10_0; }
		
		//draft
		public EnumLiteralDeclaration getDraftEnumLiteralDeclaration_11() { return cDraftEnumLiteralDeclaration_11; }
		
		//'draft'
		public Keyword getDraftDraftKeyword_11_0() { return cDraftDraftKeyword_11_0; }
		
		//pathing
		public EnumLiteralDeclaration getPathingEnumLiteralDeclaration_12() { return cPathingEnumLiteralDeclaration_12; }
		
		//'pathing'
		public Keyword getPathingPathingKeyword_12_0() { return cPathingPathingKeyword_12_0; }
		
		//awareness
		public EnumLiteralDeclaration getAwarenessEnumLiteralDeclaration_13() { return cAwarenessEnumLiteralDeclaration_13; }
		
		//'awareness'
		public Keyword getAwarenessAwarenessKeyword_13_0() { return cAwarenessAwarenessKeyword_13_0; }
		
		//experience
		public EnumLiteralDeclaration getExperienceEnumLiteralDeclaration_14() { return cExperienceEnumLiteralDeclaration_14; }
		
		//'experience'
		public Keyword getExperienceExperienceKeyword_14_0() { return cExperienceExperienceKeyword_14_0; }
		
		//objectivePlay
		public EnumLiteralDeclaration getObjectivePlayEnumLiteralDeclaration_15() { return cObjectivePlayEnumLiteralDeclaration_15; }
		
		//'objectivePlay'
		public Keyword getObjectivePlayObjectivePlayKeyword_15_0() { return cObjectivePlayObjectivePlayKeyword_15_0; }
		
		//metaGame
		public EnumLiteralDeclaration getMetaGameEnumLiteralDeclaration_16() { return cMetaGameEnumLiteralDeclaration_16; }
		
		//'metaGame'
		public Keyword getMetaGameMetaGameKeyword_16_0() { return cMetaGameMetaGameKeyword_16_0; }
	}
	
	private final RootElements pRoot;
	private final PersonElements pPerson;
	private final ZoneElements pZone;
	private final TournamentElements pTournament;
	private final LeagueElements pLeague;
	private final TeamElements pTeam;
	private final QualificationElements pQualification;
	private final EStringElements pEString;
	private final CountryElements pCountry;
	private final EIntElements pEInt;
	private final TournamentTypeElements eTournamentType;
	private final FinalStageElements pFinalStage;
	private final GroupStageElements pGroupStage;
	private final MatchElements pMatch;
	private final MatchTypeElements eMatchType;
	private final GroupElements pGroup;
	private final GroupStageTypeElements eGroupStageType;
	private final SeasonElements eSeason;
	private final PlayerElements pPlayer;
	private final CoachElements pCoach;
	private final CapacityElements pCapacity;
	private final PositionElements ePosition;
	private final CapacityTypeElements eCapacityType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EsportDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRoot = new RootElements();
		this.pPerson = new PersonElements();
		this.pZone = new ZoneElements();
		this.pTournament = new TournamentElements();
		this.pLeague = new LeagueElements();
		this.pTeam = new TeamElements();
		this.pQualification = new QualificationElements();
		this.pEString = new EStringElements();
		this.pCountry = new CountryElements();
		this.pEInt = new EIntElements();
		this.eTournamentType = new TournamentTypeElements();
		this.pFinalStage = new FinalStageElements();
		this.pGroupStage = new GroupStageElements();
		this.pMatch = new MatchElements();
		this.eMatchType = new MatchTypeElements();
		this.pGroup = new GroupElements();
		this.eGroupStageType = new GroupStageTypeElements();
		this.eSeason = new SeasonElements();
		this.pPlayer = new PlayerElements();
		this.pCoach = new CoachElements();
		this.pCapacity = new CapacityElements();
		this.ePosition = new PositionElements();
		this.eCapacityType = new CapacityTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl1.EsportDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Root:
	//	(zones+=Zone | tournaments+=Tournament | leagues+=League | teams+=Team | persons+=Person |
	//	qualifications+=Qualification | countries+=Country)*;
	public RootElements getRootAccess() {
		return pRoot;
	}
	
	public ParserRule getRootRule() {
		return getRootAccess().getRule();
	}
	
	//Person:
	//	Player | Coach;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Zone:
	//	{Zone}
	//	'Zone'
	//	name=EString
	//	':'
	//	'(' countries+=Country ("," countries+=Country)* ')' ('(' teams+=Team ("," teams+=Team)* ')')?;
	public ZoneElements getZoneAccess() {
		return pZone;
	}
	
	public ParserRule getZoneRule() {
		return getZoneAccess().getRule();
	}
	
	//Tournament:
	//	{Tournament}
	//	'Tournament'
	//	name=EString
	//	':'
	//	size=EInt
	//	type=TournamentType
	//	year=EInt
	//	'(' allowedZones+=[Zone|EString] ("," allowedZones+=[Zone|EString])* ')' ('(' countries+=[Country|EString] (","
	//	countries+=[Country|EString])* ')')? ('qualifiesFor' qualifiesFor=[Qualification|EString])? ('qualifiesFrom' '('
	//	qualifiesFrom+=[Qualification|EString] ("," qualifiesFrom+=[Qualification|EString])* ')')? ('('
	//	finalstages+=FinalStage ("," finalstages+=FinalStage)* ')')? ('(' groupstages+=GroupStage (","
	//	groupstages+=GroupStage)* ')')?;
	public TournamentElements getTournamentAccess() {
		return pTournament;
	}
	
	public ParserRule getTournamentRule() {
		return getTournamentAccess().getRule();
	}
	
	//League:
	//	{League}
	//	'League'
	//	name=EString
	//	":"
	//	size=EInt
	//	year=EInt
	//	season=Season
	//	zone=[Zone|EString]? ('(' qualifiesFor+=[Qualification|EString] ("," qualifiesFor+=[Qualification|EString])* ')')?
	//	groupstage=GroupStage?;
	public LeagueElements getLeagueAccess() {
		return pLeague;
	}
	
	public ParserRule getLeagueRule() {
		return getLeagueAccess().getRule();
	}
	
	//Team:
	//	{Team}
	//	'Team'
	//	name=EString
	//	':'
	//	championshipPoints=EInt
	//	coach=Coach?
	//	'(' players+=Player ("," players+=Player)* ')';
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}
	
	//Qualification:
	//	{Qualification}
	//	'Qualification'
	//	name=EString;
	public QualificationElements getQualificationAccess() {
		return pQualification;
	}
	
	public ParserRule getQualificationRule() {
		return getQualificationAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Country:
	//	{Country}
	//	'Country'
	//	name=EString;
	public CountryElements getCountryAccess() {
		return pCountry;
	}
	
	public ParserRule getCountryRule() {
		return getCountryAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum TournamentType:
	//	worlds | regionals | allStars | promotion | midSeasonInvitational | riftRivals | playOff;
	public TournamentTypeElements getTournamentTypeAccess() {
		return eTournamentType;
	}
	
	public EnumRule getTournamentTypeRule() {
		return getTournamentTypeAccess().getRule();
	}
	
	//FinalStage:
	//	{FinalStage}
	//	'FinalStage'
	//	':'
	//	maxNbGames=EInt
	//	'(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('matchs' '(' matchs+=Match ("," matchs+=Match)* ')')?;
	public FinalStageElements getFinalStageAccess() {
		return pFinalStage;
	}
	
	public ParserRule getFinalStageRule() {
		return getFinalStageAccess().getRule();
	}
	
	//GroupStage:
	//	{GroupStage}
	//	'GroupStage'
	//	':'
	//	type=GroupStageType
	//	maxNbGames=EInt
	//	meetingsInSameGroup=EInt
	//	meetingsWithOtherGroups=EInt? ('(' groups+=Group ("," groups+=Group)* ')')?;
	public GroupStageElements getGroupStageAccess() {
		return pGroupStage;
	}
	
	public ParserRule getGroupStageRule() {
		return getGroupStageAccess().getRule();
	}
	
	//Match:
	//	{Match}
	//	'Match'
	//	':'
	//	type=MatchType
	//	loserWins=EInt
	//	teamWinner=[Team|EString] teamLoser=[Team|EString];
	public MatchElements getMatchAccess() {
		return pMatch;
	}
	
	public ParserRule getMatchRule() {
		return getMatchAccess().getRule();
	}
	
	//enum MatchType:
	//	group | final | semiFinal | quarterFinal | singleRoundElimination;
	public MatchTypeElements getMatchTypeAccess() {
		return eMatchType;
	}
	
	public EnumRule getMatchTypeRule() {
		return getMatchTypeAccess().getRule();
	}
	
	//Group:
	//	{Group}
	//	'Group'
	//	':'
	//	'(' teams+=[Team|EString] ("," teams+=[Team|EString])* ')' ('(' matchs+=Match ("," matchs+=Match)* ')')?;
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//enum GroupStageType:
	//	league | worldsPlayIn | worldsGroup | riftRivalsGroup | msiPlayIn | msiGroup | allStarsGroup;
	public GroupStageTypeElements getGroupStageTypeAccess() {
		return eGroupStageType;
	}
	
	public EnumRule getGroupStageTypeRule() {
		return getGroupStageTypeAccess().getRule();
	}
	
	//enum Season:
	//	spring | summer;
	public SeasonElements getSeasonAccess() {
		return eSeason;
	}
	
	public EnumRule getSeasonRule() {
		return getSeasonAccess().getRule();
	}
	
	//Player:
	//	{Player}
	//	'Player'
	//	name=EString
	//	':'
	//	age=EInt
	//	country=[Country|EString] position=Position?
	//	description=EString? ('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?;
	public PlayerElements getPlayerAccess() {
		return pPlayer;
	}
	
	public ParserRule getPlayerRule() {
		return getPlayerAccess().getRule();
	}
	
	//Coach:
	//	{Coach}
	//	'Coach'
	//	name=EString
	//	':'
	//	age=EInt
	//	country=[Country|EString] description=EString? ('(' capacities+=Capacity ("," capacities+=Capacity)* ')')?;
	public CoachElements getCoachAccess() {
		return pCoach;
	}
	
	public ParserRule getCoachRule() {
		return getCoachAccess().getRule();
	}
	
	//Capacity:
	//	{Capacity}
	//	'Capacity'
	//	':'
	//	type=CapacityType
	//	value=EInt;
	public CapacityElements getCapacityAccess() {
		return pCapacity;
	}
	
	public ParserRule getCapacityRule() {
		return getCapacityAccess().getRule();
	}
	
	//enum Position:
	//	attackDamageCarry | support | midLane | topLane | jungle;
	public PositionElements getPositionAccess() {
		return ePosition;
	}
	
	public EnumRule getPositionRule() {
		return getPositionAccess().getRule();
	}
	
	//enum CapacityType:
	//	positioning | stressManagement | playmakingMechanics | escapeMechanics | patience | farm | steal | splitPush |
	//	teamPlay | aggressivity | leadership | draft | pathing | awareness | experience | objectivePlay | metaGame;
	public CapacityTypeElements getCapacityTypeAccess() {
		return eCapacityType;
	}
	
	public EnumRule getCapacityTypeRule() {
		return getCapacityTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
